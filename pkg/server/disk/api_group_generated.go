// Code generated by csi-proxy-api-gen. DO NOT EDIT.

package disk

import (
	"github.com/kubernetes-csi/csi-proxy/client/apiversion"
	"github.com/kubernetes-csi/csi-proxy/pkg/server/disk/impl"
	"github.com/kubernetes-csi/csi-proxy/pkg/server/disk/impl/v1"
	"github.com/kubernetes-csi/csi-proxy/pkg/server/disk/impl/v1alpha1"
	"github.com/kubernetes-csi/csi-proxy/pkg/server/disk/impl/v1beta1"
	"github.com/kubernetes-csi/csi-proxy/pkg/server/disk/impl/v1beta2"
	"github.com/kubernetes-csi/csi-proxy/pkg/server/disk/impl/v1beta3"
	srvtypes "github.com/kubernetes-csi/csi-proxy/pkg/server/types"
)

const name = "disk"

// ensure the server defines all the required methods
var _ impl.ServerInterface = &Server{}

func (s *Server) VersionedAPIs() []*srvtypes.VersionedAPI {
	v1alpha1Server := v1alpha1.NewVersionedServer(s)
	v1beta1Server := v1beta1.NewVersionedServer(s)
	v1beta2Server := v1beta2.NewVersionedServer(s)
	v1beta3Server := v1beta3.NewVersionedServer(s)
	v1Server := v1.NewVersionedServer(s)

	return []*srvtypes.VersionedAPI{
		{
			Group:      name,
			Version:    apiversion.NewVersionOrPanic("v1alpha1"),
			Registrant: v1alpha1Server.Register,
		},
		{
			Group:      name,
			Version:    apiversion.NewVersionOrPanic("v1beta1"),
			Registrant: v1beta1Server.Register,
		},
		{
			Group:      name,
			Version:    apiversion.NewVersionOrPanic("v1beta2"),
			Registrant: v1beta2Server.Register,
		},
		{
			Group:      name,
			Version:    apiversion.NewVersionOrPanic("v1beta3"),
			Registrant: v1beta3Server.Register,
		},
		{
			Group:      name,
			Version:    apiversion.NewVersionOrPanic("v1"),
			Registrant: v1Server.Register,
		},
	}
}
