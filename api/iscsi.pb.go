// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iscsi.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IscsiAuthType int32

const (
	IscsiAuthType_NoAuth     IscsiAuthType = 0
	IscsiAuthType_OneWayCHAP IscsiAuthType = 1
)

var IscsiAuthType_name = map[int32]string{
	0: "NoAuth",
	1: "OneWayCHAP",
}

var IscsiAuthType_value = map[string]int32{
	"NoAuth":     0,
	"OneWayCHAP": 1,
}

func (x IscsiAuthType) String() string {
	return proto.EnumName(IscsiAuthType_name, int32(x))
}

func (IscsiAuthType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{0}
}

// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/ne-iscsidsc-iscsi_digest_types
type IscsiDigestType int32

const (
	IscsiDigestType_NoDigest IscsiDigestType = 0
	IscsiDigestType_CRC32C   IscsiDigestType = 1
)

var IscsiDigestType_name = map[int32]string{
	0: "NoDigest",
	1: "CRC32C",
}

var IscsiDigestType_value = map[string]int32{
	"NoDigest": 0,
	"CRC32C":   1,
}

func (x IscsiDigestType) String() string {
	return proto.EnumName(IscsiDigestType_name, int32(x))
}

func (IscsiDigestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{1}
}

type MountISCSILunRequest struct {
	// IQN address
	// follows IQN format: iqn.yyyy-mm.naming-authority:unique name
	NodeIqn string `protobuf:"bytes,1,opt,name=node_iqn,json=nodeIqn,proto3" json:"node_iqn,omitempty"`
	// Authentication Type
	DiscoveryAuthType IscsiAuthType `protobuf:"varint,2,opt,name=discovery_auth_type,json=discoveryAuthType,proto3,enum=api.IscsiAuthType" json:"discovery_auth_type,omitempty"`
	// Discovery CHAP username
	DiscoveryChapUsername string `protobuf:"bytes,3,opt,name=discovery_chap_username,json=discoveryChapUsername,proto3" json:"discovery_chap_username,omitempty"`
	// Discovery CHAP secret
	DiscoveryChapSecret string        `protobuf:"bytes,4,opt,name=discovery_chap_secret,json=discoveryChapSecret,proto3" json:"discovery_chap_secret,omitempty"`
	SessionAuthType     IscsiAuthType `protobuf:"varint,5,opt,name=session_auth_type,json=sessionAuthType,proto3,enum=api.IscsiAuthType" json:"session_auth_type,omitempty"`
	// Session CHAP username
	SessionChapUsername string `protobuf:"bytes,6,opt,name=session_chap_username,json=sessionChapUsername,proto3" json:"session_chap_username,omitempty"`
	// Session CHAP secret
	SessionChapSecret string `protobuf:"bytes,7,opt,name=session_chap_secret,json=sessionChapSecret,proto3" json:"session_chap_secret,omitempty"`
	// TargetPortal address
	TargetPortalAddress string `protobuf:"bytes,8,opt,name=target_portal_address,json=targetPortalAddress,proto3" json:"target_portal_address,omitempty"`
	// TargetPortal port
	TargetPortalPort uint32 `protobuf:"varint,9,opt,name=target_portal_port,json=targetPortalPort,proto3" json:"target_portal_port,omitempty"`
	// Readonly mount
	Readonly             bool     `protobuf:"varint,10,opt,name=readonly,proto3" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MountISCSILunRequest) Reset()         { *m = MountISCSILunRequest{} }
func (m *MountISCSILunRequest) String() string { return proto.CompactTextString(m) }
func (*MountISCSILunRequest) ProtoMessage()    {}
func (*MountISCSILunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{0}
}

func (m *MountISCSILunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MountISCSILunRequest.Unmarshal(m, b)
}
func (m *MountISCSILunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MountISCSILunRequest.Marshal(b, m, deterministic)
}
func (m *MountISCSILunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MountISCSILunRequest.Merge(m, src)
}
func (m *MountISCSILunRequest) XXX_Size() int {
	return xxx_messageInfo_MountISCSILunRequest.Size(m)
}
func (m *MountISCSILunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MountISCSILunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MountISCSILunRequest proto.InternalMessageInfo

func (m *MountISCSILunRequest) GetNodeIqn() string {
	if m != nil {
		return m.NodeIqn
	}
	return ""
}

func (m *MountISCSILunRequest) GetDiscoveryAuthType() IscsiAuthType {
	if m != nil {
		return m.DiscoveryAuthType
	}
	return IscsiAuthType_NoAuth
}

func (m *MountISCSILunRequest) GetDiscoveryChapUsername() string {
	if m != nil {
		return m.DiscoveryChapUsername
	}
	return ""
}

func (m *MountISCSILunRequest) GetDiscoveryChapSecret() string {
	if m != nil {
		return m.DiscoveryChapSecret
	}
	return ""
}

func (m *MountISCSILunRequest) GetSessionAuthType() IscsiAuthType {
	if m != nil {
		return m.SessionAuthType
	}
	return IscsiAuthType_NoAuth
}

func (m *MountISCSILunRequest) GetSessionChapUsername() string {
	if m != nil {
		return m.SessionChapUsername
	}
	return ""
}

func (m *MountISCSILunRequest) GetSessionChapSecret() string {
	if m != nil {
		return m.SessionChapSecret
	}
	return ""
}

func (m *MountISCSILunRequest) GetTargetPortalAddress() string {
	if m != nil {
		return m.TargetPortalAddress
	}
	return ""
}

func (m *MountISCSILunRequest) GetTargetPortalPort() uint32 {
	if m != nil {
		return m.TargetPortalPort
	}
	return 0
}

func (m *MountISCSILunRequest) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

type MountISCSILunResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*MountISCSILunResponse_WindowsApiError
	//	*MountISCSILunResponse_ErrorMessage
	Error                isMountISCSILunResponse_Error `protobuf_oneof:"error"`
	DiskNumber           uint32                        `protobuf:"varint,4,opt,name=disk_number,json=diskNumber,proto3" json:"disk_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *MountISCSILunResponse) Reset()         { *m = MountISCSILunResponse{} }
func (m *MountISCSILunResponse) String() string { return proto.CompactTextString(m) }
func (*MountISCSILunResponse) ProtoMessage()    {}
func (*MountISCSILunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{1}
}

func (m *MountISCSILunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MountISCSILunResponse.Unmarshal(m, b)
}
func (m *MountISCSILunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MountISCSILunResponse.Marshal(b, m, deterministic)
}
func (m *MountISCSILunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MountISCSILunResponse.Merge(m, src)
}
func (m *MountISCSILunResponse) XXX_Size() int {
	return xxx_messageInfo_MountISCSILunResponse.Size(m)
}
func (m *MountISCSILunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MountISCSILunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MountISCSILunResponse proto.InternalMessageInfo

func (m *MountISCSILunResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isMountISCSILunResponse_Error interface {
	isMountISCSILunResponse_Error()
}

type MountISCSILunResponse_WindowsApiError struct {
	WindowsApiError *WindowsApiError `protobuf:"bytes,2,opt,name=windows_api_error,json=windowsApiError,proto3,oneof"`
}

type MountISCSILunResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*MountISCSILunResponse_WindowsApiError) isMountISCSILunResponse_Error() {}

func (*MountISCSILunResponse_ErrorMessage) isMountISCSILunResponse_Error() {}

func (m *MountISCSILunResponse) GetError() isMountISCSILunResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *MountISCSILunResponse) GetWindowsApiError() *WindowsApiError {
	if x, ok := m.GetError().(*MountISCSILunResponse_WindowsApiError); ok {
		return x.WindowsApiError
	}
	return nil
}

func (m *MountISCSILunResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*MountISCSILunResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

func (m *MountISCSILunResponse) GetDiskNumber() uint32 {
	if m != nil {
		return m.DiskNumber
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MountISCSILunResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MountISCSILunResponse_WindowsApiError)(nil),
		(*MountISCSILunResponse_ErrorMessage)(nil),
	}
}

type ReportIScsiSendTargetPortalsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportIScsiSendTargetPortalsRequest) Reset()         { *m = ReportIScsiSendTargetPortalsRequest{} }
func (m *ReportIScsiSendTargetPortalsRequest) String() string { return proto.CompactTextString(m) }
func (*ReportIScsiSendTargetPortalsRequest) ProtoMessage()    {}
func (*ReportIScsiSendTargetPortalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{2}
}

func (m *ReportIScsiSendTargetPortalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportIScsiSendTargetPortalsRequest.Unmarshal(m, b)
}
func (m *ReportIScsiSendTargetPortalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportIScsiSendTargetPortalsRequest.Marshal(b, m, deterministic)
}
func (m *ReportIScsiSendTargetPortalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportIScsiSendTargetPortalsRequest.Merge(m, src)
}
func (m *ReportIScsiSendTargetPortalsRequest) XXX_Size() int {
	return xxx_messageInfo_ReportIScsiSendTargetPortalsRequest.Size(m)
}
func (m *ReportIScsiSendTargetPortalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportIScsiSendTargetPortalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportIScsiSendTargetPortalsRequest proto.InternalMessageInfo

type IscsiPortal struct {
	// Windows name.
	SymbolicName string `protobuf:"bytes,1,opt,name=symbolic_name,json=symbolicName,proto3" json:"symbolic_name,omitempty"`
	// IP address or DNS name.
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// port number; should fit in a uint16.
	// If left empty, defaults to 3260
	Socket               uint32   `protobuf:"varint,3,opt,name=socket,proto3" json:"socket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiPortal) Reset()         { *m = IscsiPortal{} }
func (m *IscsiPortal) String() string { return proto.CompactTextString(m) }
func (*IscsiPortal) ProtoMessage()    {}
func (*IscsiPortal) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{3}
}

func (m *IscsiPortal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiPortal.Unmarshal(m, b)
}
func (m *IscsiPortal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiPortal.Marshal(b, m, deterministic)
}
func (m *IscsiPortal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiPortal.Merge(m, src)
}
func (m *IscsiPortal) XXX_Size() int {
	return xxx_messageInfo_IscsiPortal.Size(m)
}
func (m *IscsiPortal) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiPortal.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiPortal proto.InternalMessageInfo

func (m *IscsiPortal) GetSymbolicName() string {
	if m != nil {
		return m.SymbolicName
	}
	return ""
}

func (m *IscsiPortal) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *IscsiPortal) GetSocket() uint32 {
	if m != nil {
		return m.Socket
	}
	return 0
}

// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/ns-iscsidsc-iscsi_login_options
type IscsiLoginOptions struct {
	// see the "LoginFlags" section of https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/ns-iscsidsc-iscsi_login_options
	LoginFlags           uint32          `protobuf:"varint,1,opt,name=login_flags,json=loginFlags,proto3" json:"login_flags,omitempty"`
	AuthType             IscsiAuthType   `protobuf:"varint,2,opt,name=auth_type,json=authType,proto3,enum=api.IscsiAuthType" json:"auth_type,omitempty"`
	HeaderDigest         IscsiDigestType `protobuf:"varint,3,opt,name=header_digest,json=headerDigest,proto3,enum=api.IscsiDigestType" json:"header_digest,omitempty"`
	DataDigest           IscsiDigestType `protobuf:"varint,4,opt,name=data_digest,json=dataDigest,proto3,enum=api.IscsiDigestType" json:"data_digest,omitempty"`
	MaximumConnections   uint32          `protobuf:"varint,5,opt,name=maximum_connections,json=maximumConnections,proto3" json:"maximum_connections,omitempty"`
	DefaultTime_2Wait    uint32          `protobuf:"varint,6,opt,name=default_time_2_wait,json=defaultTime2Wait,proto3" json:"default_time_2_wait,omitempty"`
	DefaultTime_2Retain  uint32          `protobuf:"varint,7,opt,name=default_time_2_retain,json=defaultTime2Retain,proto3" json:"default_time_2_retain,omitempty"`
	Username             string          `protobuf:"bytes,8,opt,name=username,proto3" json:"username,omitempty"`
	Password             string          `protobuf:"bytes,9,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *IscsiLoginOptions) Reset()         { *m = IscsiLoginOptions{} }
func (m *IscsiLoginOptions) String() string { return proto.CompactTextString(m) }
func (*IscsiLoginOptions) ProtoMessage()    {}
func (*IscsiLoginOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{4}
}

func (m *IscsiLoginOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiLoginOptions.Unmarshal(m, b)
}
func (m *IscsiLoginOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiLoginOptions.Marshal(b, m, deterministic)
}
func (m *IscsiLoginOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiLoginOptions.Merge(m, src)
}
func (m *IscsiLoginOptions) XXX_Size() int {
	return xxx_messageInfo_IscsiLoginOptions.Size(m)
}
func (m *IscsiLoginOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiLoginOptions.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiLoginOptions proto.InternalMessageInfo

func (m *IscsiLoginOptions) GetLoginFlags() uint32 {
	if m != nil {
		return m.LoginFlags
	}
	return 0
}

func (m *IscsiLoginOptions) GetAuthType() IscsiAuthType {
	if m != nil {
		return m.AuthType
	}
	return IscsiAuthType_NoAuth
}

func (m *IscsiLoginOptions) GetHeaderDigest() IscsiDigestType {
	if m != nil {
		return m.HeaderDigest
	}
	return IscsiDigestType_NoDigest
}

func (m *IscsiLoginOptions) GetDataDigest() IscsiDigestType {
	if m != nil {
		return m.DataDigest
	}
	return IscsiDigestType_NoDigest
}

func (m *IscsiLoginOptions) GetMaximumConnections() uint32 {
	if m != nil {
		return m.MaximumConnections
	}
	return 0
}

func (m *IscsiLoginOptions) GetDefaultTime_2Wait() uint32 {
	if m != nil {
		return m.DefaultTime_2Wait
	}
	return 0
}

func (m *IscsiLoginOptions) GetDefaultTime_2Retain() uint32 {
	if m != nil {
		return m.DefaultTime_2Retain
	}
	return 0
}

func (m *IscsiLoginOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *IscsiLoginOptions) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/ns-iscsidsc-iscsi_target_portal_info_exw
type IscsiPortalInfo struct {
	Portal              *IscsiPortal `protobuf:"bytes,1,opt,name=portal,proto3" json:"portal,omitempty"`
	InitiatorName       string       `protobuf:"bytes,2,opt,name=initiator_name,json=initiatorName,proto3" json:"initiator_name,omitempty"`
	InitiatorPortNumber uint32       `protobuf:"varint,3,opt,name=initiator_port_number,json=initiatorPortNumber,proto3" json:"initiator_port_number,omitempty"`
	// see the "SecurityFlags" section of https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-addiscsisendtargetportalw
	SecurityFlags        uint64             `protobuf:"varint,4,opt,name=security_flags,json=securityFlags,proto3" json:"security_flags,omitempty"`
	LoginOptions         *IscsiLoginOptions `protobuf:"bytes,5,opt,name=login_options,json=loginOptions,proto3" json:"login_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *IscsiPortalInfo) Reset()         { *m = IscsiPortalInfo{} }
func (m *IscsiPortalInfo) String() string { return proto.CompactTextString(m) }
func (*IscsiPortalInfo) ProtoMessage()    {}
func (*IscsiPortalInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{5}
}

func (m *IscsiPortalInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiPortalInfo.Unmarshal(m, b)
}
func (m *IscsiPortalInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiPortalInfo.Marshal(b, m, deterministic)
}
func (m *IscsiPortalInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiPortalInfo.Merge(m, src)
}
func (m *IscsiPortalInfo) XXX_Size() int {
	return xxx_messageInfo_IscsiPortalInfo.Size(m)
}
func (m *IscsiPortalInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiPortalInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiPortalInfo proto.InternalMessageInfo

func (m *IscsiPortalInfo) GetPortal() *IscsiPortal {
	if m != nil {
		return m.Portal
	}
	return nil
}

func (m *IscsiPortalInfo) GetInitiatorName() string {
	if m != nil {
		return m.InitiatorName
	}
	return ""
}

func (m *IscsiPortalInfo) GetInitiatorPortNumber() uint32 {
	if m != nil {
		return m.InitiatorPortNumber
	}
	return 0
}

func (m *IscsiPortalInfo) GetSecurityFlags() uint64 {
	if m != nil {
		return m.SecurityFlags
	}
	return 0
}

func (m *IscsiPortalInfo) GetLoginOptions() *IscsiLoginOptions {
	if m != nil {
		return m.LoginOptions
	}
	return nil
}

type ReportIScsiSendTargetPortalsResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*ReportIScsiSendTargetPortalsResponse_WindowsApiError
	//	*ReportIScsiSendTargetPortalsResponse_ErrorMessage
	Error                isReportIScsiSendTargetPortalsResponse_Error `protobuf_oneof:"error"`
	PortalInfos          []*IscsiPortalInfo                           `protobuf:"bytes,4,rep,name=portal_infos,json=portalInfos,proto3" json:"portal_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *ReportIScsiSendTargetPortalsResponse) Reset()         { *m = ReportIScsiSendTargetPortalsResponse{} }
func (m *ReportIScsiSendTargetPortalsResponse) String() string { return proto.CompactTextString(m) }
func (*ReportIScsiSendTargetPortalsResponse) ProtoMessage()    {}
func (*ReportIScsiSendTargetPortalsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{6}
}

func (m *ReportIScsiSendTargetPortalsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportIScsiSendTargetPortalsResponse.Unmarshal(m, b)
}
func (m *ReportIScsiSendTargetPortalsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportIScsiSendTargetPortalsResponse.Marshal(b, m, deterministic)
}
func (m *ReportIScsiSendTargetPortalsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportIScsiSendTargetPortalsResponse.Merge(m, src)
}
func (m *ReportIScsiSendTargetPortalsResponse) XXX_Size() int {
	return xxx_messageInfo_ReportIScsiSendTargetPortalsResponse.Size(m)
}
func (m *ReportIScsiSendTargetPortalsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportIScsiSendTargetPortalsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportIScsiSendTargetPortalsResponse proto.InternalMessageInfo

func (m *ReportIScsiSendTargetPortalsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isReportIScsiSendTargetPortalsResponse_Error interface {
	isReportIScsiSendTargetPortalsResponse_Error()
}

type ReportIScsiSendTargetPortalsResponse_WindowsApiError struct {
	WindowsApiError *WindowsApiError `protobuf:"bytes,2,opt,name=windows_api_error,json=windowsApiError,proto3,oneof"`
}

type ReportIScsiSendTargetPortalsResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*ReportIScsiSendTargetPortalsResponse_WindowsApiError) isReportIScsiSendTargetPortalsResponse_Error() {
}

func (*ReportIScsiSendTargetPortalsResponse_ErrorMessage) isReportIScsiSendTargetPortalsResponse_Error() {
}

func (m *ReportIScsiSendTargetPortalsResponse) GetError() isReportIScsiSendTargetPortalsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ReportIScsiSendTargetPortalsResponse) GetWindowsApiError() *WindowsApiError {
	if x, ok := m.GetError().(*ReportIScsiSendTargetPortalsResponse_WindowsApiError); ok {
		return x.WindowsApiError
	}
	return nil
}

func (m *ReportIScsiSendTargetPortalsResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*ReportIScsiSendTargetPortalsResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

func (m *ReportIScsiSendTargetPortalsResponse) GetPortalInfos() []*IscsiPortalInfo {
	if m != nil {
		return m.PortalInfos
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReportIScsiSendTargetPortalsResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReportIScsiSendTargetPortalsResponse_WindowsApiError)(nil),
		(*ReportIScsiSendTargetPortalsResponse_ErrorMessage)(nil),
	}
}

type AddIScsiSendTargetPortalRequest struct {
	InitiatorInstance    string             `protobuf:"bytes,1,opt,name=initiator_instance,json=initiatorInstance,proto3" json:"initiator_instance,omitempty"`
	InitiatorPortNumber  uint32             `protobuf:"varint,2,opt,name=initiator_port_number,json=initiatorPortNumber,proto3" json:"initiator_port_number,omitempty"`
	LoginOptions         *IscsiLoginOptions `protobuf:"bytes,3,opt,name=login_options,json=loginOptions,proto3" json:"login_options,omitempty"`
	SecurityFlags        uint64             `protobuf:"varint,4,opt,name=security_flags,json=securityFlags,proto3" json:"security_flags,omitempty"`
	Portal               *IscsiPortal       `protobuf:"bytes,5,opt,name=portal,proto3" json:"portal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AddIScsiSendTargetPortalRequest) Reset()         { *m = AddIScsiSendTargetPortalRequest{} }
func (m *AddIScsiSendTargetPortalRequest) String() string { return proto.CompactTextString(m) }
func (*AddIScsiSendTargetPortalRequest) ProtoMessage()    {}
func (*AddIScsiSendTargetPortalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{7}
}

func (m *AddIScsiSendTargetPortalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddIScsiSendTargetPortalRequest.Unmarshal(m, b)
}
func (m *AddIScsiSendTargetPortalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddIScsiSendTargetPortalRequest.Marshal(b, m, deterministic)
}
func (m *AddIScsiSendTargetPortalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddIScsiSendTargetPortalRequest.Merge(m, src)
}
func (m *AddIScsiSendTargetPortalRequest) XXX_Size() int {
	return xxx_messageInfo_AddIScsiSendTargetPortalRequest.Size(m)
}
func (m *AddIScsiSendTargetPortalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddIScsiSendTargetPortalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddIScsiSendTargetPortalRequest proto.InternalMessageInfo

func (m *AddIScsiSendTargetPortalRequest) GetInitiatorInstance() string {
	if m != nil {
		return m.InitiatorInstance
	}
	return ""
}

func (m *AddIScsiSendTargetPortalRequest) GetInitiatorPortNumber() uint32 {
	if m != nil {
		return m.InitiatorPortNumber
	}
	return 0
}

func (m *AddIScsiSendTargetPortalRequest) GetLoginOptions() *IscsiLoginOptions {
	if m != nil {
		return m.LoginOptions
	}
	return nil
}

func (m *AddIScsiSendTargetPortalRequest) GetSecurityFlags() uint64 {
	if m != nil {
		return m.SecurityFlags
	}
	return 0
}

func (m *AddIScsiSendTargetPortalRequest) GetPortal() *IscsiPortal {
	if m != nil {
		return m.Portal
	}
	return nil
}

type AddIScsiSendTargetPortalResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*AddIScsiSendTargetPortalResponse_WindowsApiError
	//	*AddIScsiSendTargetPortalResponse_ErrorMessage
	Error                isAddIScsiSendTargetPortalResponse_Error `protobuf_oneof:"error"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *AddIScsiSendTargetPortalResponse) Reset()         { *m = AddIScsiSendTargetPortalResponse{} }
func (m *AddIScsiSendTargetPortalResponse) String() string { return proto.CompactTextString(m) }
func (*AddIScsiSendTargetPortalResponse) ProtoMessage()    {}
func (*AddIScsiSendTargetPortalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{8}
}

func (m *AddIScsiSendTargetPortalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddIScsiSendTargetPortalResponse.Unmarshal(m, b)
}
func (m *AddIScsiSendTargetPortalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddIScsiSendTargetPortalResponse.Marshal(b, m, deterministic)
}
func (m *AddIScsiSendTargetPortalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddIScsiSendTargetPortalResponse.Merge(m, src)
}
func (m *AddIScsiSendTargetPortalResponse) XXX_Size() int {
	return xxx_messageInfo_AddIScsiSendTargetPortalResponse.Size(m)
}
func (m *AddIScsiSendTargetPortalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddIScsiSendTargetPortalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddIScsiSendTargetPortalResponse proto.InternalMessageInfo

func (m *AddIScsiSendTargetPortalResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isAddIScsiSendTargetPortalResponse_Error interface {
	isAddIScsiSendTargetPortalResponse_Error()
}

type AddIScsiSendTargetPortalResponse_WindowsApiError struct {
	WindowsApiError *WindowsApiError `protobuf:"bytes,2,opt,name=windows_api_error,json=windowsApiError,proto3,oneof"`
}

type AddIScsiSendTargetPortalResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*AddIScsiSendTargetPortalResponse_WindowsApiError) isAddIScsiSendTargetPortalResponse_Error() {}

func (*AddIScsiSendTargetPortalResponse_ErrorMessage) isAddIScsiSendTargetPortalResponse_Error() {}

func (m *AddIScsiSendTargetPortalResponse) GetError() isAddIScsiSendTargetPortalResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *AddIScsiSendTargetPortalResponse) GetWindowsApiError() *WindowsApiError {
	if x, ok := m.GetError().(*AddIScsiSendTargetPortalResponse_WindowsApiError); ok {
		return x.WindowsApiError
	}
	return nil
}

func (m *AddIScsiSendTargetPortalResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*AddIScsiSendTargetPortalResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AddIScsiSendTargetPortalResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AddIScsiSendTargetPortalResponse_WindowsApiError)(nil),
		(*AddIScsiSendTargetPortalResponse_ErrorMessage)(nil),
	}
}

type RemoveIScsiSendTargetPortalRequest struct {
	InitiatorInstance    string       `protobuf:"bytes,1,opt,name=initiator_instance,json=initiatorInstance,proto3" json:"initiator_instance,omitempty"`
	InitiatorPortNumber  uint32       `protobuf:"varint,2,opt,name=initiator_port_number,json=initiatorPortNumber,proto3" json:"initiator_port_number,omitempty"`
	Portal               *IscsiPortal `protobuf:"bytes,3,opt,name=portal,proto3" json:"portal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RemoveIScsiSendTargetPortalRequest) Reset()         { *m = RemoveIScsiSendTargetPortalRequest{} }
func (m *RemoveIScsiSendTargetPortalRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveIScsiSendTargetPortalRequest) ProtoMessage()    {}
func (*RemoveIScsiSendTargetPortalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{9}
}

func (m *RemoveIScsiSendTargetPortalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveIScsiSendTargetPortalRequest.Unmarshal(m, b)
}
func (m *RemoveIScsiSendTargetPortalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveIScsiSendTargetPortalRequest.Marshal(b, m, deterministic)
}
func (m *RemoveIScsiSendTargetPortalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveIScsiSendTargetPortalRequest.Merge(m, src)
}
func (m *RemoveIScsiSendTargetPortalRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveIScsiSendTargetPortalRequest.Size(m)
}
func (m *RemoveIScsiSendTargetPortalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveIScsiSendTargetPortalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveIScsiSendTargetPortalRequest proto.InternalMessageInfo

func (m *RemoveIScsiSendTargetPortalRequest) GetInitiatorInstance() string {
	if m != nil {
		return m.InitiatorInstance
	}
	return ""
}

func (m *RemoveIScsiSendTargetPortalRequest) GetInitiatorPortNumber() uint32 {
	if m != nil {
		return m.InitiatorPortNumber
	}
	return 0
}

func (m *RemoveIScsiSendTargetPortalRequest) GetPortal() *IscsiPortal {
	if m != nil {
		return m.Portal
	}
	return nil
}

type RemoveIScsiSendTargetPortalResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*RemoveIScsiSendTargetPortalResponse_WindowsApiError
	//	*RemoveIScsiSendTargetPortalResponse_ErrorMessage
	Error                isRemoveIScsiSendTargetPortalResponse_Error `protobuf_oneof:"error"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *RemoveIScsiSendTargetPortalResponse) Reset()         { *m = RemoveIScsiSendTargetPortalResponse{} }
func (m *RemoveIScsiSendTargetPortalResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveIScsiSendTargetPortalResponse) ProtoMessage()    {}
func (*RemoveIScsiSendTargetPortalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{10}
}

func (m *RemoveIScsiSendTargetPortalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveIScsiSendTargetPortalResponse.Unmarshal(m, b)
}
func (m *RemoveIScsiSendTargetPortalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveIScsiSendTargetPortalResponse.Marshal(b, m, deterministic)
}
func (m *RemoveIScsiSendTargetPortalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveIScsiSendTargetPortalResponse.Merge(m, src)
}
func (m *RemoveIScsiSendTargetPortalResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveIScsiSendTargetPortalResponse.Size(m)
}
func (m *RemoveIScsiSendTargetPortalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveIScsiSendTargetPortalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveIScsiSendTargetPortalResponse proto.InternalMessageInfo

func (m *RemoveIScsiSendTargetPortalResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isRemoveIScsiSendTargetPortalResponse_Error interface {
	isRemoveIScsiSendTargetPortalResponse_Error()
}

type RemoveIScsiSendTargetPortalResponse_WindowsApiError struct {
	WindowsApiError *WindowsApiError `protobuf:"bytes,2,opt,name=windows_api_error,json=windowsApiError,proto3,oneof"`
}

type RemoveIScsiSendTargetPortalResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*RemoveIScsiSendTargetPortalResponse_WindowsApiError) isRemoveIScsiSendTargetPortalResponse_Error() {
}

func (*RemoveIScsiSendTargetPortalResponse_ErrorMessage) isRemoveIScsiSendTargetPortalResponse_Error() {
}

func (m *RemoveIScsiSendTargetPortalResponse) GetError() isRemoveIScsiSendTargetPortalResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RemoveIScsiSendTargetPortalResponse) GetWindowsApiError() *WindowsApiError {
	if x, ok := m.GetError().(*RemoveIScsiSendTargetPortalResponse_WindowsApiError); ok {
		return x.WindowsApiError
	}
	return nil
}

func (m *RemoveIScsiSendTargetPortalResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*RemoveIScsiSendTargetPortalResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RemoveIScsiSendTargetPortalResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RemoveIScsiSendTargetPortalResponse_WindowsApiError)(nil),
		(*RemoveIScsiSendTargetPortalResponse_ErrorMessage)(nil),
	}
}

type ReportIScsiTargetsRequest struct {
	// if true,  the iSCSI initiator service updates the list of discovered targets before
	// returning the target list data to the caller.
	ForceUpdate          bool     `protobuf:"varint,1,opt,name=force_update,json=forceUpdate,proto3" json:"force_update,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportIScsiTargetsRequest) Reset()         { *m = ReportIScsiTargetsRequest{} }
func (m *ReportIScsiTargetsRequest) String() string { return proto.CompactTextString(m) }
func (*ReportIScsiTargetsRequest) ProtoMessage()    {}
func (*ReportIScsiTargetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{11}
}

func (m *ReportIScsiTargetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportIScsiTargetsRequest.Unmarshal(m, b)
}
func (m *ReportIScsiTargetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportIScsiTargetsRequest.Marshal(b, m, deterministic)
}
func (m *ReportIScsiTargetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportIScsiTargetsRequest.Merge(m, src)
}
func (m *ReportIScsiTargetsRequest) XXX_Size() int {
	return xxx_messageInfo_ReportIScsiTargetsRequest.Size(m)
}
func (m *ReportIScsiTargetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportIScsiTargetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportIScsiTargetsRequest proto.InternalMessageInfo

func (m *ReportIScsiTargetsRequest) GetForceUpdate() bool {
	if m != nil {
		return m.ForceUpdate
	}
	return false
}

type ReportIScsiTargetsResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*ReportIScsiTargetsResponse_WindowsApiError
	//	*ReportIScsiTargetsResponse_ErrorMessage
	Error                isReportIScsiTargetsResponse_Error `protobuf_oneof:"error"`
	TargetNames          []string                           `protobuf:"bytes,4,rep,name=target_names,json=targetNames,proto3" json:"target_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ReportIScsiTargetsResponse) Reset()         { *m = ReportIScsiTargetsResponse{} }
func (m *ReportIScsiTargetsResponse) String() string { return proto.CompactTextString(m) }
func (*ReportIScsiTargetsResponse) ProtoMessage()    {}
func (*ReportIScsiTargetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{12}
}

func (m *ReportIScsiTargetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportIScsiTargetsResponse.Unmarshal(m, b)
}
func (m *ReportIScsiTargetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportIScsiTargetsResponse.Marshal(b, m, deterministic)
}
func (m *ReportIScsiTargetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportIScsiTargetsResponse.Merge(m, src)
}
func (m *ReportIScsiTargetsResponse) XXX_Size() int {
	return xxx_messageInfo_ReportIScsiTargetsResponse.Size(m)
}
func (m *ReportIScsiTargetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportIScsiTargetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportIScsiTargetsResponse proto.InternalMessageInfo

func (m *ReportIScsiTargetsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isReportIScsiTargetsResponse_Error interface {
	isReportIScsiTargetsResponse_Error()
}

type ReportIScsiTargetsResponse_WindowsApiError struct {
	WindowsApiError *WindowsApiError `protobuf:"bytes,2,opt,name=windows_api_error,json=windowsApiError,proto3,oneof"`
}

type ReportIScsiTargetsResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*ReportIScsiTargetsResponse_WindowsApiError) isReportIScsiTargetsResponse_Error() {}

func (*ReportIScsiTargetsResponse_ErrorMessage) isReportIScsiTargetsResponse_Error() {}

func (m *ReportIScsiTargetsResponse) GetError() isReportIScsiTargetsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ReportIScsiTargetsResponse) GetWindowsApiError() *WindowsApiError {
	if x, ok := m.GetError().(*ReportIScsiTargetsResponse_WindowsApiError); ok {
		return x.WindowsApiError
	}
	return nil
}

func (m *ReportIScsiTargetsResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*ReportIScsiTargetsResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

func (m *ReportIScsiTargetsResponse) GetTargetNames() []string {
	if m != nil {
		return m.TargetNames
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReportIScsiTargetsResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReportIScsiTargetsResponse_WindowsApiError)(nil),
		(*ReportIScsiTargetsResponse_ErrorMessage)(nil),
	}
}

type LoginIscsiTargetRequest struct {
	TargetName             string             `protobuf:"bytes,1,opt,name=target_name,json=targetName,proto3" json:"target_name,omitempty"`
	IsInformationalSession bool               `protobuf:"varint,2,opt,name=is_informational_session,json=isInformationalSession,proto3" json:"is_informational_session,omitempty"`
	InitiatorInstance      string             `protobuf:"bytes,3,opt,name=initiator_instance,json=initiatorInstance,proto3" json:"initiator_instance,omitempty"`
	InitiatorPortNumber    uint32             `protobuf:"varint,4,opt,name=initiator_port_number,json=initiatorPortNumber,proto3" json:"initiator_port_number,omitempty"`
	TargetPortal           *IscsiPortal       `protobuf:"bytes,5,opt,name=target_portal,json=targetPortal,proto3" json:"target_portal,omitempty"`
	SecurityFlags          uint64             `protobuf:"varint,6,opt,name=security_flags,json=securityFlags,proto3" json:"security_flags,omitempty"`
	LoginOptions           *IscsiLoginOptions `protobuf:"bytes,7,opt,name=login_options,json=loginOptions,proto3" json:"login_options,omitempty"`
	Key                    string             `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty"`
	IsPersistent           bool               `protobuf:"varint,9,opt,name=is_persistent,json=isPersistent,proto3" json:"is_persistent,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}           `json:"-"`
	XXX_unrecognized       []byte             `json:"-"`
	XXX_sizecache          int32              `json:"-"`
}

func (m *LoginIscsiTargetRequest) Reset()         { *m = LoginIscsiTargetRequest{} }
func (m *LoginIscsiTargetRequest) String() string { return proto.CompactTextString(m) }
func (*LoginIscsiTargetRequest) ProtoMessage()    {}
func (*LoginIscsiTargetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{13}
}

func (m *LoginIscsiTargetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginIscsiTargetRequest.Unmarshal(m, b)
}
func (m *LoginIscsiTargetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginIscsiTargetRequest.Marshal(b, m, deterministic)
}
func (m *LoginIscsiTargetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginIscsiTargetRequest.Merge(m, src)
}
func (m *LoginIscsiTargetRequest) XXX_Size() int {
	return xxx_messageInfo_LoginIscsiTargetRequest.Size(m)
}
func (m *LoginIscsiTargetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginIscsiTargetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginIscsiTargetRequest proto.InternalMessageInfo

func (m *LoginIscsiTargetRequest) GetTargetName() string {
	if m != nil {
		return m.TargetName
	}
	return ""
}

func (m *LoginIscsiTargetRequest) GetIsInformationalSession() bool {
	if m != nil {
		return m.IsInformationalSession
	}
	return false
}

func (m *LoginIscsiTargetRequest) GetInitiatorInstance() string {
	if m != nil {
		return m.InitiatorInstance
	}
	return ""
}

func (m *LoginIscsiTargetRequest) GetInitiatorPortNumber() uint32 {
	if m != nil {
		return m.InitiatorPortNumber
	}
	return 0
}

func (m *LoginIscsiTargetRequest) GetTargetPortal() *IscsiPortal {
	if m != nil {
		return m.TargetPortal
	}
	return nil
}

func (m *LoginIscsiTargetRequest) GetSecurityFlags() uint64 {
	if m != nil {
		return m.SecurityFlags
	}
	return 0
}

func (m *LoginIscsiTargetRequest) GetLoginOptions() *IscsiLoginOptions {
	if m != nil {
		return m.LoginOptions
	}
	return nil
}

func (m *LoginIscsiTargetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *LoginIscsiTargetRequest) GetIsPersistent() bool {
	if m != nil {
		return m.IsPersistent
	}
	return false
}

type IscsiID struct {
	AdapterUnique        uint64   `protobuf:"varint,1,opt,name=adapter_unique,json=adapterUnique,proto3" json:"adapter_unique,omitempty"`
	AdapterSpecific      uint64   `protobuf:"varint,2,opt,name=adapter_specific,json=adapterSpecific,proto3" json:"adapter_specific,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiID) Reset()         { *m = IscsiID{} }
func (m *IscsiID) String() string { return proto.CompactTextString(m) }
func (*IscsiID) ProtoMessage()    {}
func (*IscsiID) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{14}
}

func (m *IscsiID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiID.Unmarshal(m, b)
}
func (m *IscsiID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiID.Marshal(b, m, deterministic)
}
func (m *IscsiID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiID.Merge(m, src)
}
func (m *IscsiID) XXX_Size() int {
	return xxx_messageInfo_IscsiID.Size(m)
}
func (m *IscsiID) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiID.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiID proto.InternalMessageInfo

func (m *IscsiID) GetAdapterUnique() uint64 {
	if m != nil {
		return m.AdapterUnique
	}
	return 0
}

func (m *IscsiID) GetAdapterSpecific() uint64 {
	if m != nil {
		return m.AdapterSpecific
	}
	return 0
}

type LoginIscsiTargetResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*LoginIscsiTargetResponse_WindowsApiError
	//	*LoginIscsiTargetResponse_ErrorMessage
	Error                isLoginIscsiTargetResponse_Error `protobuf_oneof:"error"`
	SessionId            *IscsiID                         `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ConnectionId         *IscsiID                         `protobuf:"bytes,5,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *LoginIscsiTargetResponse) Reset()         { *m = LoginIscsiTargetResponse{} }
func (m *LoginIscsiTargetResponse) String() string { return proto.CompactTextString(m) }
func (*LoginIscsiTargetResponse) ProtoMessage()    {}
func (*LoginIscsiTargetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{15}
}

func (m *LoginIscsiTargetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginIscsiTargetResponse.Unmarshal(m, b)
}
func (m *LoginIscsiTargetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginIscsiTargetResponse.Marshal(b, m, deterministic)
}
func (m *LoginIscsiTargetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginIscsiTargetResponse.Merge(m, src)
}
func (m *LoginIscsiTargetResponse) XXX_Size() int {
	return xxx_messageInfo_LoginIscsiTargetResponse.Size(m)
}
func (m *LoginIscsiTargetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginIscsiTargetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginIscsiTargetResponse proto.InternalMessageInfo

func (m *LoginIscsiTargetResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isLoginIscsiTargetResponse_Error interface {
	isLoginIscsiTargetResponse_Error()
}

type LoginIscsiTargetResponse_WindowsApiError struct {
	WindowsApiError *WindowsApiError `protobuf:"bytes,2,opt,name=windows_api_error,json=windowsApiError,proto3,oneof"`
}

type LoginIscsiTargetResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*LoginIscsiTargetResponse_WindowsApiError) isLoginIscsiTargetResponse_Error() {}

func (*LoginIscsiTargetResponse_ErrorMessage) isLoginIscsiTargetResponse_Error() {}

func (m *LoginIscsiTargetResponse) GetError() isLoginIscsiTargetResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *LoginIscsiTargetResponse) GetWindowsApiError() *WindowsApiError {
	if x, ok := m.GetError().(*LoginIscsiTargetResponse_WindowsApiError); ok {
		return x.WindowsApiError
	}
	return nil
}

func (m *LoginIscsiTargetResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*LoginIscsiTargetResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

func (m *LoginIscsiTargetResponse) GetSessionId() *IscsiID {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *LoginIscsiTargetResponse) GetConnectionId() *IscsiID {
	if m != nil {
		return m.ConnectionId
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*LoginIscsiTargetResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*LoginIscsiTargetResponse_WindowsApiError)(nil),
		(*LoginIscsiTargetResponse_ErrorMessage)(nil),
	}
}

type LogoutIScsiTargetRequest struct {
	SessionId            *IscsiID `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutIScsiTargetRequest) Reset()         { *m = LogoutIScsiTargetRequest{} }
func (m *LogoutIScsiTargetRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutIScsiTargetRequest) ProtoMessage()    {}
func (*LogoutIScsiTargetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{16}
}

func (m *LogoutIScsiTargetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutIScsiTargetRequest.Unmarshal(m, b)
}
func (m *LogoutIScsiTargetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutIScsiTargetRequest.Marshal(b, m, deterministic)
}
func (m *LogoutIScsiTargetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutIScsiTargetRequest.Merge(m, src)
}
func (m *LogoutIScsiTargetRequest) XXX_Size() int {
	return xxx_messageInfo_LogoutIScsiTargetRequest.Size(m)
}
func (m *LogoutIScsiTargetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutIScsiTargetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutIScsiTargetRequest proto.InternalMessageInfo

func (m *LogoutIScsiTargetRequest) GetSessionId() *IscsiID {
	if m != nil {
		return m.SessionId
	}
	return nil
}

type LogoutIScsiTargetResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*LogoutIScsiTargetResponse_WindowsApiError
	//	*LogoutIScsiTargetResponse_ErrorMessage
	Error                isLogoutIScsiTargetResponse_Error `protobuf_oneof:"error"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *LogoutIScsiTargetResponse) Reset()         { *m = LogoutIScsiTargetResponse{} }
func (m *LogoutIScsiTargetResponse) String() string { return proto.CompactTextString(m) }
func (*LogoutIScsiTargetResponse) ProtoMessage()    {}
func (*LogoutIScsiTargetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{17}
}

func (m *LogoutIScsiTargetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutIScsiTargetResponse.Unmarshal(m, b)
}
func (m *LogoutIScsiTargetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutIScsiTargetResponse.Marshal(b, m, deterministic)
}
func (m *LogoutIScsiTargetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutIScsiTargetResponse.Merge(m, src)
}
func (m *LogoutIScsiTargetResponse) XXX_Size() int {
	return xxx_messageInfo_LogoutIScsiTargetResponse.Size(m)
}
func (m *LogoutIScsiTargetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutIScsiTargetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutIScsiTargetResponse proto.InternalMessageInfo

func (m *LogoutIScsiTargetResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isLogoutIScsiTargetResponse_Error interface {
	isLogoutIScsiTargetResponse_Error()
}

type LogoutIScsiTargetResponse_WindowsApiError struct {
	WindowsApiError *WindowsApiError `protobuf:"bytes,2,opt,name=windows_api_error,json=windowsApiError,proto3,oneof"`
}

type LogoutIScsiTargetResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*LogoutIScsiTargetResponse_WindowsApiError) isLogoutIScsiTargetResponse_Error() {}

func (*LogoutIScsiTargetResponse_ErrorMessage) isLogoutIScsiTargetResponse_Error() {}

func (m *LogoutIScsiTargetResponse) GetError() isLogoutIScsiTargetResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *LogoutIScsiTargetResponse) GetWindowsApiError() *WindowsApiError {
	if x, ok := m.GetError().(*LogoutIScsiTargetResponse_WindowsApiError); ok {
		return x.WindowsApiError
	}
	return nil
}

func (m *LogoutIScsiTargetResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*LogoutIScsiTargetResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*LogoutIScsiTargetResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*LogoutIScsiTargetResponse_WindowsApiError)(nil),
		(*LogoutIScsiTargetResponse_ErrorMessage)(nil),
	}
}

type GetIScsiSessionListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIScsiSessionListRequest) Reset()         { *m = GetIScsiSessionListRequest{} }
func (m *GetIScsiSessionListRequest) String() string { return proto.CompactTextString(m) }
func (*GetIScsiSessionListRequest) ProtoMessage()    {}
func (*GetIScsiSessionListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{18}
}

func (m *GetIScsiSessionListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIScsiSessionListRequest.Unmarshal(m, b)
}
func (m *GetIScsiSessionListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIScsiSessionListRequest.Marshal(b, m, deterministic)
}
func (m *GetIScsiSessionListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIScsiSessionListRequest.Merge(m, src)
}
func (m *GetIScsiSessionListRequest) XXX_Size() int {
	return xxx_messageInfo_GetIScsiSessionListRequest.Size(m)
}
func (m *GetIScsiSessionListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIScsiSessionListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIScsiSessionListRequest proto.InternalMessageInfo

type IscsiConnectionInfo struct {
	ConnectionId         *IscsiID `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	InitiatorAddress     string   `protobuf:"bytes,2,opt,name=initiator_address,json=initiatorAddress,proto3" json:"initiator_address,omitempty"`
	TargetAddress        string   `protobuf:"bytes,3,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
	InitiatorSocket      uint32   `protobuf:"varint,4,opt,name=initiator_socket,json=initiatorSocket,proto3" json:"initiator_socket,omitempty"`
	TargetSocket         uint32   `protobuf:"varint,5,opt,name=target_socket,json=targetSocket,proto3" json:"target_socket,omitempty"`
	CID                  []byte   `protobuf:"bytes,6,opt,name=CID,proto3" json:"CID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiConnectionInfo) Reset()         { *m = IscsiConnectionInfo{} }
func (m *IscsiConnectionInfo) String() string { return proto.CompactTextString(m) }
func (*IscsiConnectionInfo) ProtoMessage()    {}
func (*IscsiConnectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{19}
}

func (m *IscsiConnectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiConnectionInfo.Unmarshal(m, b)
}
func (m *IscsiConnectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiConnectionInfo.Marshal(b, m, deterministic)
}
func (m *IscsiConnectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiConnectionInfo.Merge(m, src)
}
func (m *IscsiConnectionInfo) XXX_Size() int {
	return xxx_messageInfo_IscsiConnectionInfo.Size(m)
}
func (m *IscsiConnectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiConnectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiConnectionInfo proto.InternalMessageInfo

func (m *IscsiConnectionInfo) GetConnectionId() *IscsiID {
	if m != nil {
		return m.ConnectionId
	}
	return nil
}

func (m *IscsiConnectionInfo) GetInitiatorAddress() string {
	if m != nil {
		return m.InitiatorAddress
	}
	return ""
}

func (m *IscsiConnectionInfo) GetTargetAddress() string {
	if m != nil {
		return m.TargetAddress
	}
	return ""
}

func (m *IscsiConnectionInfo) GetInitiatorSocket() uint32 {
	if m != nil {
		return m.InitiatorSocket
	}
	return 0
}

func (m *IscsiConnectionInfo) GetTargetSocket() uint32 {
	if m != nil {
		return m.TargetSocket
	}
	return 0
}

func (m *IscsiConnectionInfo) GetCID() []byte {
	if m != nil {
		return m.CID
	}
	return nil
}

// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/ns-iscsidsc-iscsi_session_infow
type IscsiSessionInfo struct {
	SessionId            *IscsiID               `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	InitiatorName        string                 `protobuf:"bytes,2,opt,name=initiator_name,json=initiatorName,proto3" json:"initiator_name,omitempty"`
	TargetNodeName       string                 `protobuf:"bytes,3,opt,name=target_node_name,json=targetNodeName,proto3" json:"target_node_name,omitempty"`
	TargetName           string                 `protobuf:"bytes,4,opt,name=target_name,json=targetName,proto3" json:"target_name,omitempty"`
	ISID                 []byte                 `protobuf:"bytes,5,opt,name=ISID,proto3" json:"ISID,omitempty"`
	TSID                 []byte                 `protobuf:"bytes,6,opt,name=TSID,proto3" json:"TSID,omitempty"`
	Connections          []*IscsiConnectionInfo `protobuf:"bytes,7,rep,name=connections,proto3" json:"connections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *IscsiSessionInfo) Reset()         { *m = IscsiSessionInfo{} }
func (m *IscsiSessionInfo) String() string { return proto.CompactTextString(m) }
func (*IscsiSessionInfo) ProtoMessage()    {}
func (*IscsiSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{20}
}

func (m *IscsiSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiSessionInfo.Unmarshal(m, b)
}
func (m *IscsiSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiSessionInfo.Marshal(b, m, deterministic)
}
func (m *IscsiSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiSessionInfo.Merge(m, src)
}
func (m *IscsiSessionInfo) XXX_Size() int {
	return xxx_messageInfo_IscsiSessionInfo.Size(m)
}
func (m *IscsiSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiSessionInfo proto.InternalMessageInfo

func (m *IscsiSessionInfo) GetSessionId() *IscsiID {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *IscsiSessionInfo) GetInitiatorName() string {
	if m != nil {
		return m.InitiatorName
	}
	return ""
}

func (m *IscsiSessionInfo) GetTargetNodeName() string {
	if m != nil {
		return m.TargetNodeName
	}
	return ""
}

func (m *IscsiSessionInfo) GetTargetName() string {
	if m != nil {
		return m.TargetName
	}
	return ""
}

func (m *IscsiSessionInfo) GetISID() []byte {
	if m != nil {
		return m.ISID
	}
	return nil
}

func (m *IscsiSessionInfo) GetTSID() []byte {
	if m != nil {
		return m.TSID
	}
	return nil
}

func (m *IscsiSessionInfo) GetConnections() []*IscsiConnectionInfo {
	if m != nil {
		return m.Connections
	}
	return nil
}

type GetIScsiSessionListResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*GetIScsiSessionListResponse_WindowsApiError
	//	*GetIScsiSessionListResponse_ErrorMessage
	Error                isGetIScsiSessionListResponse_Error `protobuf_oneof:"error"`
	SessionInfos         []*IscsiSessionInfo                 `protobuf:"bytes,4,rep,name=session_infos,json=sessionInfos,proto3" json:"session_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *GetIScsiSessionListResponse) Reset()         { *m = GetIScsiSessionListResponse{} }
func (m *GetIScsiSessionListResponse) String() string { return proto.CompactTextString(m) }
func (*GetIScsiSessionListResponse) ProtoMessage()    {}
func (*GetIScsiSessionListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{21}
}

func (m *GetIScsiSessionListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIScsiSessionListResponse.Unmarshal(m, b)
}
func (m *GetIScsiSessionListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIScsiSessionListResponse.Marshal(b, m, deterministic)
}
func (m *GetIScsiSessionListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIScsiSessionListResponse.Merge(m, src)
}
func (m *GetIScsiSessionListResponse) XXX_Size() int {
	return xxx_messageInfo_GetIScsiSessionListResponse.Size(m)
}
func (m *GetIScsiSessionListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIScsiSessionListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIScsiSessionListResponse proto.InternalMessageInfo

func (m *GetIScsiSessionListResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isGetIScsiSessionListResponse_Error interface {
	isGetIScsiSessionListResponse_Error()
}

type GetIScsiSessionListResponse_WindowsApiError struct {
	WindowsApiError *WindowsApiError `protobuf:"bytes,2,opt,name=windows_api_error,json=windowsApiError,proto3,oneof"`
}

type GetIScsiSessionListResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*GetIScsiSessionListResponse_WindowsApiError) isGetIScsiSessionListResponse_Error() {}

func (*GetIScsiSessionListResponse_ErrorMessage) isGetIScsiSessionListResponse_Error() {}

func (m *GetIScsiSessionListResponse) GetError() isGetIScsiSessionListResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetIScsiSessionListResponse) GetWindowsApiError() *WindowsApiError {
	if x, ok := m.GetError().(*GetIScsiSessionListResponse_WindowsApiError); ok {
		return x.WindowsApiError
	}
	return nil
}

func (m *GetIScsiSessionListResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*GetIScsiSessionListResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

func (m *GetIScsiSessionListResponse) GetSessionInfos() []*IscsiSessionInfo {
	if m != nil {
		return m.SessionInfos
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetIScsiSessionListResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetIScsiSessionListResponse_WindowsApiError)(nil),
		(*GetIScsiSessionListResponse_ErrorMessage)(nil),
	}
}

type GetDevicesForIScsiSessionRequest struct {
	SessionId            *IscsiID `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDevicesForIScsiSessionRequest) Reset()         { *m = GetDevicesForIScsiSessionRequest{} }
func (m *GetDevicesForIScsiSessionRequest) String() string { return proto.CompactTextString(m) }
func (*GetDevicesForIScsiSessionRequest) ProtoMessage()    {}
func (*GetDevicesForIScsiSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{22}
}

func (m *GetDevicesForIScsiSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDevicesForIScsiSessionRequest.Unmarshal(m, b)
}
func (m *GetDevicesForIScsiSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDevicesForIScsiSessionRequest.Marshal(b, m, deterministic)
}
func (m *GetDevicesForIScsiSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDevicesForIScsiSessionRequest.Merge(m, src)
}
func (m *GetDevicesForIScsiSessionRequest) XXX_Size() int {
	return xxx_messageInfo_GetDevicesForIScsiSessionRequest.Size(m)
}
func (m *GetDevicesForIScsiSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDevicesForIScsiSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDevicesForIScsiSessionRequest proto.InternalMessageInfo

func (m *GetDevicesForIScsiSessionRequest) GetSessionId() *IscsiID {
	if m != nil {
		return m.SessionId
	}
	return nil
}

// see https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/content/ntddscsi/ns-ntddscsi-_scsi_address
type ScsiAddress struct {
	PortNumber           uint32   `protobuf:"varint,1,opt,name=port_number,json=portNumber,proto3" json:"port_number,omitempty"`
	PathId               uint32   `protobuf:"varint,2,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`
	TargetId             uint32   `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Lun                  uint32   `protobuf:"varint,4,opt,name=lun,proto3" json:"lun,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScsiAddress) Reset()         { *m = ScsiAddress{} }
func (m *ScsiAddress) String() string { return proto.CompactTextString(m) }
func (*ScsiAddress) ProtoMessage()    {}
func (*ScsiAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{23}
}

func (m *ScsiAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScsiAddress.Unmarshal(m, b)
}
func (m *ScsiAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScsiAddress.Marshal(b, m, deterministic)
}
func (m *ScsiAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScsiAddress.Merge(m, src)
}
func (m *ScsiAddress) XXX_Size() int {
	return xxx_messageInfo_ScsiAddress.Size(m)
}
func (m *ScsiAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_ScsiAddress.DiscardUnknown(m)
}

var xxx_messageInfo_ScsiAddress proto.InternalMessageInfo

func (m *ScsiAddress) GetPortNumber() uint32 {
	if m != nil {
		return m.PortNumber
	}
	return 0
}

func (m *ScsiAddress) GetPathId() uint32 {
	if m != nil {
		return m.PathId
	}
	return 0
}

func (m *ScsiAddress) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *ScsiAddress) GetLun() uint32 {
	if m != nil {
		return m.Lun
	}
	return 0
}

// see https://docs.microsoft.com/en-us/windows/win32/api/winioctl/ns-winioctl-_storage_device_number
type IscsiStorageDeviceNumber struct {
	DeviceType           uint32   `protobuf:"varint,1,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	DeviceNumber         uint32   `protobuf:"varint,2,opt,name=device_number,json=deviceNumber,proto3" json:"device_number,omitempty"`
	PartitionNumber      uint32   `protobuf:"varint,3,opt,name=partition_number,json=partitionNumber,proto3" json:"partition_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiStorageDeviceNumber) Reset()         { *m = IscsiStorageDeviceNumber{} }
func (m *IscsiStorageDeviceNumber) String() string { return proto.CompactTextString(m) }
func (*IscsiStorageDeviceNumber) ProtoMessage()    {}
func (*IscsiStorageDeviceNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{24}
}

func (m *IscsiStorageDeviceNumber) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiStorageDeviceNumber.Unmarshal(m, b)
}
func (m *IscsiStorageDeviceNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiStorageDeviceNumber.Marshal(b, m, deterministic)
}
func (m *IscsiStorageDeviceNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiStorageDeviceNumber.Merge(m, src)
}
func (m *IscsiStorageDeviceNumber) XXX_Size() int {
	return xxx_messageInfo_IscsiStorageDeviceNumber.Size(m)
}
func (m *IscsiStorageDeviceNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiStorageDeviceNumber.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiStorageDeviceNumber proto.InternalMessageInfo

func (m *IscsiStorageDeviceNumber) GetDeviceType() uint32 {
	if m != nil {
		return m.DeviceType
	}
	return 0
}

func (m *IscsiStorageDeviceNumber) GetDeviceNumber() uint32 {
	if m != nil {
		return m.DeviceNumber
	}
	return 0
}

func (m *IscsiStorageDeviceNumber) GetPartitionNumber() uint32 {
	if m != nil {
		return m.PartitionNumber
	}
	return 0
}

// see https://docs.microsoft.com/en-us/windows/win32/api/iscsidsc/ns-iscsidsc-iscsi_device_on_sessionw
type IscsiDevice struct {
	InitiatorName        string                    `protobuf:"bytes,1,opt,name=initiator_name,json=initiatorName,proto3" json:"initiator_name,omitempty"`
	TargetName           string                    `protobuf:"bytes,2,opt,name=target_name,json=targetName,proto3" json:"target_name,omitempty"`
	ScsiAddress          *ScsiAddress              `protobuf:"bytes,3,opt,name=scsi_address,json=scsiAddress,proto3" json:"scsi_address,omitempty"`
	DeviceInterfaceType  string                    `protobuf:"bytes,4,opt,name=device_interface_type,json=deviceInterfaceType,proto3" json:"device_interface_type,omitempty"`
	DeviceInterfaceName  string                    `protobuf:"bytes,5,opt,name=device_interface_name,json=deviceInterfaceName,proto3" json:"device_interface_name,omitempty"`
	LegacyName           string                    `protobuf:"bytes,6,opt,name=legacy_name,json=legacyName,proto3" json:"legacy_name,omitempty"`
	StorageDeviceNumber  *IscsiStorageDeviceNumber `protobuf:"bytes,7,opt,name=storage_device_number,json=storageDeviceNumber,proto3" json:"storage_device_number,omitempty"`
	DeviceInstance       uint32                    `protobuf:"varint,8,opt,name=device_instance,json=deviceInstance,proto3" json:"device_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *IscsiDevice) Reset()         { *m = IscsiDevice{} }
func (m *IscsiDevice) String() string { return proto.CompactTextString(m) }
func (*IscsiDevice) ProtoMessage()    {}
func (*IscsiDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{25}
}

func (m *IscsiDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiDevice.Unmarshal(m, b)
}
func (m *IscsiDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiDevice.Marshal(b, m, deterministic)
}
func (m *IscsiDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiDevice.Merge(m, src)
}
func (m *IscsiDevice) XXX_Size() int {
	return xxx_messageInfo_IscsiDevice.Size(m)
}
func (m *IscsiDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiDevice.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiDevice proto.InternalMessageInfo

func (m *IscsiDevice) GetInitiatorName() string {
	if m != nil {
		return m.InitiatorName
	}
	return ""
}

func (m *IscsiDevice) GetTargetName() string {
	if m != nil {
		return m.TargetName
	}
	return ""
}

func (m *IscsiDevice) GetScsiAddress() *ScsiAddress {
	if m != nil {
		return m.ScsiAddress
	}
	return nil
}

func (m *IscsiDevice) GetDeviceInterfaceType() string {
	if m != nil {
		return m.DeviceInterfaceType
	}
	return ""
}

func (m *IscsiDevice) GetDeviceInterfaceName() string {
	if m != nil {
		return m.DeviceInterfaceName
	}
	return ""
}

func (m *IscsiDevice) GetLegacyName() string {
	if m != nil {
		return m.LegacyName
	}
	return ""
}

func (m *IscsiDevice) GetStorageDeviceNumber() *IscsiStorageDeviceNumber {
	if m != nil {
		return m.StorageDeviceNumber
	}
	return nil
}

func (m *IscsiDevice) GetDeviceInstance() uint32 {
	if m != nil {
		return m.DeviceInstance
	}
	return 0
}

type GetDevicesForIScsiSessionResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*GetDevicesForIScsiSessionResponse_WindowsApiError
	//	*GetDevicesForIScsiSessionResponse_ErrorMessage
	Error                isGetDevicesForIScsiSessionResponse_Error `protobuf_oneof:"error"`
	Devices              []*IscsiDevice                            `protobuf:"bytes,4,rep,name=devices,proto3" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *GetDevicesForIScsiSessionResponse) Reset()         { *m = GetDevicesForIScsiSessionResponse{} }
func (m *GetDevicesForIScsiSessionResponse) String() string { return proto.CompactTextString(m) }
func (*GetDevicesForIScsiSessionResponse) ProtoMessage()    {}
func (*GetDevicesForIScsiSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954acfae42d1ccbb, []int{26}
}

func (m *GetDevicesForIScsiSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDevicesForIScsiSessionResponse.Unmarshal(m, b)
}
func (m *GetDevicesForIScsiSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDevicesForIScsiSessionResponse.Marshal(b, m, deterministic)
}
func (m *GetDevicesForIScsiSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDevicesForIScsiSessionResponse.Merge(m, src)
}
func (m *GetDevicesForIScsiSessionResponse) XXX_Size() int {
	return xxx_messageInfo_GetDevicesForIScsiSessionResponse.Size(m)
}
func (m *GetDevicesForIScsiSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDevicesForIScsiSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDevicesForIScsiSessionResponse proto.InternalMessageInfo

func (m *GetDevicesForIScsiSessionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isGetDevicesForIScsiSessionResponse_Error interface {
	isGetDevicesForIScsiSessionResponse_Error()
}

type GetDevicesForIScsiSessionResponse_WindowsApiError struct {
	WindowsApiError *WindowsApiError `protobuf:"bytes,2,opt,name=windows_api_error,json=windowsApiError,proto3,oneof"`
}

type GetDevicesForIScsiSessionResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*GetDevicesForIScsiSessionResponse_WindowsApiError) isGetDevicesForIScsiSessionResponse_Error() {
}

func (*GetDevicesForIScsiSessionResponse_ErrorMessage) isGetDevicesForIScsiSessionResponse_Error() {}

func (m *GetDevicesForIScsiSessionResponse) GetError() isGetDevicesForIScsiSessionResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetDevicesForIScsiSessionResponse) GetWindowsApiError() *WindowsApiError {
	if x, ok := m.GetError().(*GetDevicesForIScsiSessionResponse_WindowsApiError); ok {
		return x.WindowsApiError
	}
	return nil
}

func (m *GetDevicesForIScsiSessionResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*GetDevicesForIScsiSessionResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

func (m *GetDevicesForIScsiSessionResponse) GetDevices() []*IscsiDevice {
	if m != nil {
		return m.Devices
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetDevicesForIScsiSessionResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetDevicesForIScsiSessionResponse_WindowsApiError)(nil),
		(*GetDevicesForIScsiSessionResponse_ErrorMessage)(nil),
	}
}

func init() {
	proto.RegisterEnum("api.IscsiAuthType", IscsiAuthType_name, IscsiAuthType_value)
	proto.RegisterEnum("api.IscsiDigestType", IscsiDigestType_name, IscsiDigestType_value)
	proto.RegisterType((*MountISCSILunRequest)(nil), "api.MountISCSILunRequest")
	proto.RegisterType((*MountISCSILunResponse)(nil), "api.MountISCSILunResponse")
	proto.RegisterType((*ReportIScsiSendTargetPortalsRequest)(nil), "api.ReportIScsiSendTargetPortalsRequest")
	proto.RegisterType((*IscsiPortal)(nil), "api.IscsiPortal")
	proto.RegisterType((*IscsiLoginOptions)(nil), "api.IscsiLoginOptions")
	proto.RegisterType((*IscsiPortalInfo)(nil), "api.IscsiPortalInfo")
	proto.RegisterType((*ReportIScsiSendTargetPortalsResponse)(nil), "api.ReportIScsiSendTargetPortalsResponse")
	proto.RegisterType((*AddIScsiSendTargetPortalRequest)(nil), "api.AddIScsiSendTargetPortalRequest")
	proto.RegisterType((*AddIScsiSendTargetPortalResponse)(nil), "api.AddIScsiSendTargetPortalResponse")
	proto.RegisterType((*RemoveIScsiSendTargetPortalRequest)(nil), "api.RemoveIScsiSendTargetPortalRequest")
	proto.RegisterType((*RemoveIScsiSendTargetPortalResponse)(nil), "api.RemoveIScsiSendTargetPortalResponse")
	proto.RegisterType((*ReportIScsiTargetsRequest)(nil), "api.ReportIScsiTargetsRequest")
	proto.RegisterType((*ReportIScsiTargetsResponse)(nil), "api.ReportIScsiTargetsResponse")
	proto.RegisterType((*LoginIscsiTargetRequest)(nil), "api.LoginIscsiTargetRequest")
	proto.RegisterType((*IscsiID)(nil), "api.IscsiID")
	proto.RegisterType((*LoginIscsiTargetResponse)(nil), "api.LoginIscsiTargetResponse")
	proto.RegisterType((*LogoutIScsiTargetRequest)(nil), "api.LogoutIScsiTargetRequest")
	proto.RegisterType((*LogoutIScsiTargetResponse)(nil), "api.LogoutIScsiTargetResponse")
	proto.RegisterType((*GetIScsiSessionListRequest)(nil), "api.GetIScsiSessionListRequest")
	proto.RegisterType((*IscsiConnectionInfo)(nil), "api.IscsiConnectionInfo")
	proto.RegisterType((*IscsiSessionInfo)(nil), "api.IscsiSessionInfo")
	proto.RegisterType((*GetIScsiSessionListResponse)(nil), "api.GetIScsiSessionListResponse")
	proto.RegisterType((*GetDevicesForIScsiSessionRequest)(nil), "api.GetDevicesForIScsiSessionRequest")
	proto.RegisterType((*ScsiAddress)(nil), "api.ScsiAddress")
	proto.RegisterType((*IscsiStorageDeviceNumber)(nil), "api.IscsiStorageDeviceNumber")
	proto.RegisterType((*IscsiDevice)(nil), "api.IscsiDevice")
	proto.RegisterType((*GetDevicesForIScsiSessionResponse)(nil), "api.GetDevicesForIScsiSessionResponse")
}

func init() { proto.RegisterFile("iscsi.proto", fileDescriptor_954acfae42d1ccbb) }

var fileDescriptor_954acfae42d1ccbb = []byte{
	// 1918 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0x4b, 0x6f, 0x1b, 0xc9,
	0x11, 0xd6, 0x88, 0x94, 0x48, 0x15, 0x39, 0x12, 0xd5, 0xb4, 0x6c, 0x8a, 0xf6, 0xae, 0xe4, 0xf1,
	0x2a, 0x2b, 0xdb, 0x59, 0x2f, 0x96, 0xc6, 0xe6, 0xb1, 0x01, 0x16, 0x90, 0xa5, 0xac, 0x3d, 0x80,
	0x57, 0xf6, 0x36, 0x65, 0x18, 0x48, 0x0e, 0x83, 0xf6, 0x4c, 0x4b, 0x6a, 0x98, 0x9c, 0x19, 0x4f,
	0x0f, 0xa5, 0xe5, 0x35, 0xb9, 0x04, 0xc8, 0x21, 0x40, 0x80, 0xfc, 0x81, 0xdc, 0x7c, 0x4b, 0x90,
	0xff, 0x90, 0x5b, 0x7e, 0x42, 0xce, 0x39, 0xe5, 0x0f, 0xe4, 0x10, 0x04, 0xfd, 0x9a, 0x87, 0xf8,
	0x90, 0x9c, 0xcb, 0xea, 0x22, 0x4d, 0xd7, 0xa3, 0xbb, 0xba, 0xea, 0xab, 0xea, 0xea, 0x26, 0x34,
	0x18, 0xf7, 0x39, 0x7b, 0x14, 0x27, 0x51, 0x1a, 0xa1, 0x0a, 0x89, 0x59, 0xb7, 0x49, 0x93, 0x24,
	0x4a, 0xb8, 0x22, 0x39, 0xbf, 0xad, 0xc2, 0x8d, 0x6f, 0xa3, 0x51, 0x98, 0xba, 0xfd, 0xfd, 0xbe,
	0xfb, 0x7c, 0x14, 0x62, 0xfa, 0x6e, 0x44, 0x79, 0x8a, 0x36, 0xa1, 0x1e, 0x46, 0x01, 0xf5, 0xd8,
	0xbb, 0xb0, 0x63, 0x6d, 0x5b, 0xbb, 0x2b, 0xb8, 0x26, 0xc6, 0xee, 0xbb, 0x10, 0x3d, 0x81, 0x76,
	0xc0, 0xb8, 0x1f, 0x9d, 0xd1, 0x64, 0xec, 0x91, 0x51, 0x7a, 0xea, 0xa5, 0xe3, 0x98, 0x76, 0x16,
	0xb7, 0xad, 0xdd, 0xd5, 0x1e, 0x7a, 0x44, 0x62, 0xf6, 0xc8, 0x15, 0xab, 0xee, 0x8d, 0xd2, 0xd3,
	0xa3, 0x71, 0x4c, 0xf1, 0x7a, 0x26, 0x6e, 0x48, 0xe8, 0x27, 0x70, 0x2b, 0x9f, 0xc3, 0x3f, 0x25,
	0xb1, 0x37, 0xe2, 0x34, 0x09, 0xc9, 0x90, 0x76, 0x2a, 0x72, 0xb5, 0x8d, 0x8c, 0xbd, 0x7f, 0x4a,
	0xe2, 0x57, 0x9a, 0x89, 0x7a, 0xb0, 0x71, 0x41, 0x8f, 0x53, 0x3f, 0xa1, 0x69, 0xa7, 0x2a, 0xb5,
	0xda, 0x25, 0xad, 0xbe, 0x64, 0xa1, 0xaf, 0x61, 0x9d, 0x53, 0xce, 0x59, 0x14, 0x16, 0xac, 0x5d,
	0x9a, 0x69, 0xed, 0x9a, 0x16, 0xce, 0x6c, 0xed, 0xc1, 0x86, 0xd1, 0x2f, 0x5b, 0xba, 0xac, 0xd6,
	0xd4, 0xcc, 0x92, 0x9d, 0x8f, 0xa0, 0x5d, 0xd2, 0xd1, 0x56, 0xd6, 0xa4, 0xc6, 0x7a, 0x41, 0x43,
	0xdb, 0xd8, 0x83, 0x8d, 0x94, 0x24, 0x27, 0x34, 0xf5, 0xe2, 0x28, 0x49, 0xc9, 0xc0, 0x23, 0x41,
	0x90, 0x50, 0xce, 0x3b, 0x75, 0xb5, 0x86, 0x62, 0xbe, 0x94, 0xbc, 0x3d, 0xc5, 0x42, 0x3f, 0x06,
	0x54, 0xd6, 0x11, 0xff, 0x3a, 0x2b, 0xdb, 0xd6, 0xae, 0x8d, 0x5b, 0x45, 0x05, 0xf1, 0x17, 0x75,
	0xa1, 0x9e, 0x50, 0x12, 0x44, 0xe1, 0x60, 0xdc, 0x81, 0x6d, 0x6b, 0xb7, 0x8e, 0xb3, 0xb1, 0xf3,
	0x77, 0x0b, 0x36, 0x2e, 0xa0, 0x80, 0xc7, 0x51, 0xc8, 0x29, 0xea, 0x40, 0x8d, 0x8f, 0x7c, 0x5f,
	0x58, 0x62, 0x49, 0x25, 0x33, 0x44, 0x4f, 0x60, 0xfd, 0x9c, 0x85, 0x41, 0x74, 0xce, 0x3d, 0x12,
	0x33, 0x4f, 0xa2, 0x4a, 0x62, 0xa0, 0xd1, 0xbb, 0x21, 0xbd, 0xfa, 0x5a, 0x71, 0xf7, 0x62, 0xf6,
	0x4b, 0xc1, 0x7b, 0xb6, 0x80, 0xd7, 0xce, 0xcb, 0x24, 0xb4, 0x03, 0xb6, 0xd4, 0xf3, 0x86, 0x94,
	0x73, 0x72, 0xa2, 0x63, 0xff, 0x6c, 0x01, 0x2b, 0x90, 0x7e, 0xab, 0xa8, 0x68, 0x0b, 0x1a, 0x01,
	0xe3, 0x6f, 0xbd, 0x70, 0x34, 0x7c, 0x43, 0x13, 0x19, 0x6a, 0x1b, 0x83, 0x20, 0x1d, 0x4a, 0xca,
	0x93, 0x1a, 0x2c, 0x49, 0x05, 0x67, 0x07, 0xee, 0x61, 0x2a, 0xdc, 0xe0, 0xf6, 0x7d, 0xce, 0xfa,
	0x34, 0x0c, 0x8e, 0x0a, 0x7e, 0xe0, 0x1a, 0xdc, 0x4e, 0x00, 0x0d, 0x19, 0x73, 0x45, 0x46, 0xf7,
	0xc0, 0xe6, 0xe3, 0xe1, 0x9b, 0x68, 0xc0, 0x7c, 0x4f, 0x06, 0x56, 0x01, 0xbe, 0x69, 0x88, 0x87,
	0x22, 0xa2, 0x1d, 0xa8, 0x99, 0x98, 0x2c, 0xaa, 0x7c, 0xd0, 0x43, 0x74, 0x13, 0x96, 0x79, 0xe4,
	0xbf, 0xa5, 0xa9, 0x34, 0xdf, 0xc6, 0x7a, 0xe4, 0xfc, 0xb9, 0x02, 0xeb, 0x72, 0x99, 0xe7, 0xd1,
	0x09, 0x0b, 0x5f, 0xc4, 0x29, 0x8b, 0x42, 0x2e, 0x36, 0x33, 0x10, 0x63, 0xef, 0x78, 0x40, 0x4e,
	0x94, 0x57, 0x6d, 0x0c, 0x92, 0xf4, 0x8d, 0xa0, 0xa0, 0xcf, 0x61, 0xe5, 0x2a, 0x49, 0x55, 0x27,
	0x06, 0x9f, 0x3f, 0x07, 0xfb, 0x94, 0x92, 0x80, 0x26, 0x5e, 0xc0, 0x4e, 0x28, 0x57, 0x66, 0xac,
	0xea, 0x28, 0x48, 0xa5, 0x03, 0x49, 0x97, 0x6a, 0x4d, 0x25, 0xaa, 0x28, 0xe8, 0x4b, 0x68, 0x04,
	0x24, 0x25, 0x46, 0xb1, 0x3a, 0x47, 0x11, 0x84, 0xa0, 0x56, 0xfb, 0x1c, 0xda, 0x43, 0xf2, 0x3d,
	0x1b, 0x8e, 0x86, 0x9e, 0x1f, 0x85, 0x21, 0xf5, 0xe5, 0xd6, 0x64, 0x4e, 0xd9, 0x18, 0x69, 0xd6,
	0x7e, 0xce, 0x41, 0x9f, 0x41, 0x3b, 0xa0, 0xc7, 0x64, 0x34, 0x48, 0xbd, 0x94, 0x0d, 0xa9, 0xd7,
	0xf3, 0xce, 0x09, 0x4b, 0x65, 0x02, 0xd9, 0xb8, 0xa5, 0x59, 0x47, 0x6c, 0x48, 0x7b, 0xaf, 0x09,
	0x4b, 0xd1, 0x17, 0xb0, 0x71, 0x41, 0x3c, 0xa1, 0x29, 0x61, 0xa1, 0xcc, 0x1f, 0x1b, 0xa3, 0xa2,
	0x02, 0x96, 0x1c, 0x01, 0xef, 0x2c, 0x2f, 0x55, 0xce, 0x64, 0x63, 0xc1, 0x8b, 0x09, 0xe7, 0xe7,
	0x51, 0x12, 0xc8, 0xf4, 0x58, 0xc1, 0xd9, 0xd8, 0xf9, 0x8f, 0x05, 0x6b, 0x05, 0x2c, 0xb8, 0xe1,
	0x71, 0x84, 0x76, 0x61, 0x59, 0x65, 0x94, 0x8c, 0x4e, 0xa3, 0xd7, 0xca, 0x1d, 0xa2, 0xa4, 0xb0,
	0xe6, 0xa3, 0x1d, 0x58, 0x65, 0x21, 0x4b, 0x19, 0x49, 0xa3, 0x44, 0x41, 0x47, 0x61, 0xc3, 0xce,
	0xa8, 0x87, 0xba, 0x6a, 0xe5, 0x62, 0x42, 0xd5, 0x40, 0x59, 0x01, 0xa6, 0x9d, 0x31, 0xc5, 0xf4,
	0x0a, 0xd3, 0x62, 0x6a, 0x4e, 0xfd, 0x51, 0xc2, 0xd2, 0xb1, 0x86, 0x8a, 0x88, 0x4e, 0x15, 0xdb,
	0x86, 0xaa, 0xd0, 0xf2, 0x0b, 0xb0, 0x15, 0x9c, 0xa2, 0x38, 0x0f, 0x42, 0xa3, 0x77, 0x33, 0x37,
	0xb9, 0x88, 0x3e, 0xdc, 0x1c, 0x14, 0x46, 0xce, 0xbf, 0x2d, 0xf8, 0x64, 0x7e, 0xbe, 0x5c, 0xa7,
	0x32, 0xf0, 0x53, 0x68, 0xea, 0x42, 0xc7, 0xc2, 0xe3, 0x48, 0xf8, 0xa3, 0x92, 0xad, 0x72, 0x21,
	0x84, 0xb8, 0x11, 0x67, 0xdf, 0x3c, 0x2f, 0x0f, 0x7f, 0x5c, 0x84, 0xad, 0xbd, 0x20, 0x98, 0xba,
	0x59, 0x73, 0xf0, 0x7d, 0x06, 0x28, 0x8f, 0x15, 0x0b, 0x79, 0x4a, 0x42, 0xdf, 0x54, 0x84, 0xf5,
	0x8c, 0xe3, 0x6a, 0xc6, 0xec, 0xd0, 0x2e, 0xce, 0x0e, 0xed, 0x44, 0xcc, 0x2a, 0x57, 0x8f, 0xd9,
	0x55, 0x71, 0x91, 0x63, 0x78, 0x69, 0x3e, 0x86, 0x9d, 0xbf, 0x58, 0xb0, 0x3d, 0xdb, 0x29, 0xd7,
	0x08, 0x00, 0x79, 0x1c, 0xff, 0x6a, 0x81, 0x83, 0xe9, 0x30, 0x3a, 0xa3, 0x3f, 0x74, 0x28, 0x73,
	0x37, 0x57, 0x2e, 0x71, 0xf3, 0xdf, 0x2c, 0x71, 0x36, 0xcd, 0xb1, 0xf9, 0x5a, 0x7a, 0xfa, 0x6b,
	0xd8, 0x2c, 0x14, 0x08, 0x65, 0xb0, 0x39, 0x46, 0xd1, 0x5d, 0x68, 0x1e, 0x47, 0x89, 0x4f, 0xbd,
	0x51, 0x1c, 0x90, 0x94, 0x6a, 0x7b, 0x1b, 0x92, 0xf6, 0x4a, 0x92, 0x9c, 0x7f, 0x58, 0xd0, 0x9d,
	0x36, 0xc1, 0x75, 0xaa, 0x2b, 0x77, 0xa1, 0xa9, 0xfb, 0x28, 0x51, 0xc1, 0x55, 0x5d, 0x59, 0xc1,
	0x0d, 0x45, 0x13, 0xf5, 0xbb, 0x50, 0x41, 0xde, 0x57, 0xe0, 0x96, 0x4c, 0x4e, 0x19, 0x62, 0xb5,
	0x1d, 0xe3, 0x8e, 0x2d, 0x68, 0x14, 0xe6, 0xd1, 0x38, 0x83, 0x7c, 0x1a, 0xf4, 0x33, 0xe8, 0x30,
	0x2e, 0x8b, 0x57, 0x32, 0x24, 0x22, 0x9b, 0xc9, 0xc0, 0xd3, 0xad, 0xa0, 0xdc, 0x5a, 0x1d, 0xdf,
	0x64, 0xdc, 0x2d, 0xb2, 0xfb, 0x8a, 0x3b, 0x03, 0xc9, 0x95, 0x0f, 0x46, 0x72, 0x75, 0x36, 0x92,
	0xbf, 0x04, 0xbb, 0xd4, 0x4d, 0xce, 0xac, 0x1b, 0xcd, 0x62, 0x6b, 0x39, 0xa5, 0x1c, 0x2d, 0x5f,
	0xe9, 0x98, 0xaa, 0x7d, 0x40, 0xc9, 0x6b, 0x41, 0xe5, 0x2d, 0x1d, 0xeb, 0x63, 0x5d, 0x7c, 0x8a,
	0x8e, 0x8d, 0x71, 0x2f, 0xa6, 0x09, 0x67, 0x3c, 0xa5, 0xa1, 0xea, 0x7a, 0xeb, 0xb8, 0xc9, 0xf8,
	0xcb, 0x8c, 0xe6, 0xfc, 0x1a, 0x6a, 0x72, 0x66, 0xf7, 0x40, 0x58, 0x49, 0x02, 0x12, 0xa7, 0x34,
	0xf1, 0x46, 0x21, 0x7b, 0x37, 0x52, 0xd1, 0xa9, 0x62, 0x5b, 0x53, 0x5f, 0x49, 0x22, 0xba, 0x0f,
	0x2d, 0x23, 0xc6, 0x63, 0xea, 0xb3, 0x63, 0xe6, 0xcb, 0xc0, 0x54, 0xf1, 0x9a, 0xa6, 0xf7, 0x35,
	0xd9, 0xf9, 0xdd, 0x22, 0x74, 0x26, 0x81, 0x70, 0x9d, 0x60, 0xfd, 0x10, 0xc0, 0x5c, 0x41, 0x58,
	0x20, 0x23, 0xdf, 0xe8, 0x35, 0x73, 0x7f, 0xbb, 0x07, 0x78, 0x45, 0xf3, 0xdd, 0x00, 0x7d, 0x01,
	0x76, 0xde, 0xc9, 0x09, 0xf9, 0xa5, 0x29, 0xf2, 0xcd, 0x5c, 0xc4, 0x0d, 0xf2, 0x9c, 0x78, 0x2a,
	0x3d, 0x11, 0x8d, 0x8a, 0x29, 0x6e, 0x72, 0xa2, 0x6c, 0x84, 0x35, 0xd7, 0x08, 0xe7, 0xbd, 0x05,
	0x9b, 0x53, 0x66, 0xba, 0x96, 0x85, 0xf1, 0x0e, 0x74, 0x9f, 0x52, 0xd3, 0x36, 0xc9, 0x0d, 0x3c,
	0x67, 0xdc, 0x6c, 0xdb, 0xf9, 0xaf, 0x05, 0x6d, 0xb9, 0xc1, 0xbc, 0x09, 0x96, 0x9d, 0xe5, 0x84,
	0x9b, 0xad, 0xcb, 0xdc, 0x8c, 0x1e, 0x42, 0x9e, 0xe0, 0x5e, 0xf9, 0x06, 0xd2, 0xca, 0x18, 0xe6,
	0x4a, 0xb8, 0x03, 0xab, 0x3a, 0x89, 0x8d, 0xa4, 0xaa, 0x11, 0x3a, 0xb5, 0x8d, 0xd8, 0x7d, 0xc8,
	0x55, 0x3d, 0x7d, 0x77, 0x51, 0xa5, 0x61, 0x2d, 0xa3, 0xf7, 0x25, 0x59, 0x64, 0x9a, 0x9e, 0x51,
	0xcb, 0xa9, 0x26, 0x5f, 0x17, 0x01, 0x2d, 0xd4, 0x82, 0xca, 0xbe, 0x7b, 0x20, 0x33, 0xbf, 0x89,
	0xc5, 0xa7, 0xf3, 0xa7, 0x45, 0x68, 0xc9, 0xfd, 0x68, 0xe7, 0xc8, 0xdd, 0x7f, 0x08, 0x18, 0xae,
	0xda, 0x5a, 0xef, 0x42, 0xcb, 0x14, 0xdd, 0x28, 0xa0, 0x5e, 0xe1, 0x05, 0x41, 0x7b, 0xe2, 0x30,
	0x0a, 0xa8, 0x94, 0xbc, 0x50, 0x9e, 0xab, 0x13, 0xe5, 0x19, 0x41, 0xd5, 0xed, 0xbb, 0x07, 0x72,
	0x87, 0x4d, 0x2c, 0xbf, 0x05, 0xed, 0xa8, 0x9f, 0x6d, 0x4d, 0x7e, 0xa3, 0xaf, 0xa0, 0x51, 0xbc,
	0xf5, 0xd4, 0x64, 0x1b, 0xda, 0xc9, 0xf7, 0x51, 0x8e, 0x39, 0x2e, 0x0a, 0x3b, 0xff, 0xb2, 0xe0,
	0xf6, 0x54, 0xdc, 0x5c, 0xa7, 0xca, 0xf1, 0x15, 0xd8, 0x59, 0x9c, 0x0a, 0x9d, 0xf6, 0x46, 0xbe,
	0xc5, 0x42, 0x54, 0x71, 0x93, 0xe7, 0x83, 0xc2, 0x49, 0xf9, 0x02, 0xb6, 0x9f, 0xd2, 0xf4, 0x80,
	0x9e, 0x31, 0x9f, 0xf2, 0x6f, 0xa2, 0xa4, 0xb8, 0xe5, 0xff, 0xab, 0x3a, 0x9c, 0x41, 0x43, 0x4c,
	0x61, 0x30, 0xbc, 0x05, 0x8d, 0xe2, 0xc9, 0xa6, 0xef, 0xd1, 0x71, 0x7e, 0xa0, 0xdd, 0x82, 0x5a,
	0x4c, 0xd2, 0x53, 0x31, 0xb3, 0x6a, 0xe0, 0x96, 0xc5, 0xd0, 0x0d, 0xd0, 0x6d, 0x58, 0xd1, 0x40,
	0x60, 0x81, 0xbe, 0x81, 0xd5, 0x15, 0xc1, 0x0d, 0x04, 0x94, 0x07, 0xa3, 0x50, 0x67, 0x83, 0xf8,
	0x74, 0x7e, 0x6f, 0x41, 0x47, 0x6d, 0x3a, 0x8d, 0x12, 0x72, 0x42, 0xd5, 0x96, 0xf4, 0x22, 0x5b,
	0xd0, 0x08, 0xe4, 0x58, 0x5d, 0xd7, 0xb5, 0x15, 0x8a, 0x24, 0x2f, 0xe7, 0xf7, 0xc0, 0xd6, 0x02,
	0xa5, 0x66, 0xb2, 0x19, 0x14, 0x67, 0xb9, 0x0f, 0xad, 0x98, 0x24, 0x29, 0x93, 0x55, 0xa1, 0x74,
	0x35, 0x5c, 0xcb, 0xe8, 0x4a, 0xd4, 0xf9, 0x43, 0x45, 0xbf, 0x5d, 0x28, 0x33, 0xa6, 0xa4, 0x89,
	0x35, 0x2d, 0x4d, 0x2e, 0x80, 0x7f, 0x71, 0x02, 0xfc, 0x8f, 0xa1, 0x29, 0x66, 0x2d, 0xd5, 0x0d,
	0x73, 0xfa, 0x17, 0xdc, 0x8e, 0x1b, 0xbc, 0x10, 0x83, 0x9e, 0xb8, 0xa7, 0xcb, 0xcd, 0xb1, 0x30,
	0xa5, 0xc9, 0x31, 0x31, 0x7e, 0x30, 0xaf, 0x71, 0x92, 0xe9, 0x1a, 0x9e, 0x79, 0x4d, 0x9b, 0xd0,
	0x91, 0x36, 0x2d, 0x4d, 0xd5, 0x31, 0xd6, 0x0f, 0xe8, 0x09, 0xf1, 0xc7, 0x5e, 0xe1, 0xdd, 0x0d,
	0x14, 0x49, 0x0a, 0x7c, 0x07, 0x1b, 0x5c, 0x45, 0xc7, 0x2b, 0x7b, 0x5b, 0xb5, 0x19, 0x1f, 0x15,
	0x90, 0x3b, 0x19, 0x44, 0xdc, 0xe6, 0x53, 0x22, 0xfb, 0x29, 0xac, 0x65, 0x76, 0xea, 0x7e, 0xab,
	0x2e, 0x43, 0xb2, 0x6a, 0x2c, 0x54, 0x54, 0xe7, 0x9f, 0x16, 0xdc, 0x9d, 0x83, 0xf4, 0xeb, 0x94,
	0xd8, 0x0f, 0xa0, 0xa6, 0x8c, 0x37, 0x29, 0x5d, 0xe8, 0xee, 0x94, 0xfd, 0xd8, 0x08, 0x64, 0x89,
	0xfc, 0xe0, 0x21, 0xd8, 0xa5, 0x97, 0x27, 0x04, 0xb0, 0x7c, 0x18, 0x89, 0x51, 0x6b, 0x01, 0xad,
	0x02, 0xbc, 0x08, 0xe9, 0x6b, 0x32, 0xde, 0x7f, 0xb6, 0xf7, 0xb2, 0x65, 0x3d, 0x78, 0xa8, 0x5f,
	0x53, 0xf2, 0x87, 0x23, 0xd4, 0x84, 0xfa, 0x61, 0xa4, 0xc6, 0xad, 0x05, 0xa1, 0xbc, 0x8f, 0xf7,
	0x1f, 0xf7, 0xf6, 0x5b, 0x56, 0xef, 0x37, 0x35, 0xb8, 0xa1, 0x2a, 0x66, 0xdf, 0x7d, 0x99, 0x44,
	0xdf, 0x8f, 0xfb, 0x34, 0x91, 0xa0, 0x7e, 0x06, 0x76, 0xe9, 0x39, 0x12, 0x6d, 0x4a, 0x3b, 0xa7,
	0x3d, 0x54, 0x77, 0xbb, 0xd3, 0x58, 0xca, 0xe9, 0xce, 0x02, 0x1a, 0xc1, 0x9d, 0x79, 0x0f, 0x1c,
	0x68, 0x57, 0x6a, 0x5f, 0xe1, 0xcd, 0xb0, 0x7b, 0xff, 0x0a, 0x92, 0xd9, 0xb2, 0x0c, 0x3a, 0xb3,
	0xae, 0xd4, 0xe8, 0x13, 0x39, 0xd1, 0x25, 0xcf, 0x10, 0xdd, 0x9d, 0x4b, 0xa4, 0xb2, 0xa5, 0x12,
	0xb8, 0x3d, 0xe7, 0x5a, 0x89, 0x3e, 0xd5, 0x66, 0x5f, 0x76, 0x59, 0xee, 0xee, 0x5e, 0x2e, 0x98,
	0xad, 0xf9, 0x1a, 0xd0, 0xe4, 0xa5, 0x0e, 0x7d, 0x7c, 0xd1, 0x43, 0xe5, 0xeb, 0x62, 0x77, 0x6b,
	0x26, 0x3f, 0x9b, 0xf8, 0x3b, 0x68, 0x5d, 0x6c, 0xaa, 0xd1, 0x1d, 0xa9, 0x36, 0xe3, 0xd2, 0xd5,
	0xfd, 0x68, 0x06, 0x37, 0x9b, 0xf2, 0x08, 0xd6, 0x27, 0x7a, 0x4a, 0x94, 0x69, 0x4d, 0xed, 0x5a,
	0xbb, 0x1f, 0xcf, 0x62, 0x67, 0xb3, 0xfe, 0x0a, 0xda, 0x53, 0x8e, 0x71, 0xa4, 0xb6, 0x38, 0xbb,
	0x31, 0xec, 0x6e, 0xcf, 0x16, 0xc8, 0xe6, 0x1e, 0xc0, 0xe6, 0xcc, 0x7a, 0x82, 0x76, 0xcc, 0x04,
	0x73, 0x4f, 0xd6, 0xee, 0x8f, 0x2e, 0x13, 0x33, 0xab, 0xbd, 0x59, 0x96, 0x3f, 0x04, 0x3d, 0xfe,
	0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xd9, 0x70, 0x29, 0x2a, 0x1a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IscsiCSIProxyServiceClient is the client API for IscsiCSIProxyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IscsiCSIProxyServiceClient interface {
	// MountISCSILun mounts a remote LUN over iSCSI and returns the OS disk device number.
	MountISCSILun(ctx context.Context, in *MountISCSILunRequest, opts ...grpc.CallOption) (*MountISCSILunResponse, error)
	// ReportIScsiSendTargetPortals retrieves a list of static target portals that the iSCSI initiator
	// service uses to perform automatic discovery with SendTarget requests.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-reportiscsisendtargetportalsexw
	ReportIScsiSendTargetPortals(ctx context.Context, in *ReportIScsiSendTargetPortalsRequest, opts ...grpc.CallOption) (*ReportIScsiSendTargetPortalsResponse, error)
	// AddIScsiSendTargetPortal adds a static target portal to the list of target portals to which the iSCSI initiator service transmits SendTargets requests.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-addiscsisendtargetportalw
	AddIScsiSendTargetPortal(ctx context.Context, in *AddIScsiSendTargetPortalRequest, opts ...grpc.CallOption) (*AddIScsiSendTargetPortalResponse, error)
	// RemoveIScsiSendTargetPortal removes a portal from the list of portals to which the iSCSI initiator service sends
	// SendTargets requests for target discovery.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-removeiscsisendtargetportalw
	RemoveIScsiSendTargetPortal(ctx context.Context, in *RemoveIScsiSendTargetPortalRequest, opts ...grpc.CallOption) (*RemoveIScsiSendTargetPortalResponse, error)
	// ReportIScsiTargets retrieves the list of targets that the iSCSI initiator service has discovered.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-reportiscsitargetsw
	ReportIScsiTargets(ctx context.Context, in *ReportIScsiTargetsRequest, opts ...grpc.CallOption) (*ReportIScsiTargetsResponse, error)
	// LoginIscsiTarget establishes a full featured login session with the indicated target.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-loginiscsitargetw
	LoginIscsiTarget(ctx context.Context, in *LoginIscsiTargetRequest, opts ...grpc.CallOption) (*LoginIscsiTargetResponse, error)
	// LogoutIScsiTarget closes the specified login session.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-logoutiscsitarget
	LogoutIScsiTarget(ctx context.Context, in *LogoutIScsiTargetRequest, opts ...grpc.CallOption) (*LogoutIScsiTargetResponse, error)
	// GetIScsiSessionList retrieves the list of active iSCSI sessions.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-getiscsisessionlistw
	GetIScsiSessionList(ctx context.Context, in *GetIScsiSessionListRequest, opts ...grpc.CallOption) (*GetIScsiSessionListResponse, error)
	// GetDevicesForIScsiSession retrieves information about the devices associated with an existing session.
	// see https://docs.microsoft.com/en-us/windows/win32/api/iscsidsc/nf-iscsidsc-getdevicesforiscsisessionw
	GetDevicesForIScsiSession(ctx context.Context, in *GetDevicesForIScsiSessionRequest, opts ...grpc.CallOption) (*GetDevicesForIScsiSessionResponse, error)
}

type iscsiCSIProxyServiceClient struct {
	cc *grpc.ClientConn
}

func NewIscsiCSIProxyServiceClient(cc *grpc.ClientConn) IscsiCSIProxyServiceClient {
	return &iscsiCSIProxyServiceClient{cc}
}

func (c *iscsiCSIProxyServiceClient) MountISCSILun(ctx context.Context, in *MountISCSILunRequest, opts ...grpc.CallOption) (*MountISCSILunResponse, error) {
	out := new(MountISCSILunResponse)
	err := c.cc.Invoke(ctx, "/api.IscsiCSIProxyService/MountISCSILun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iscsiCSIProxyServiceClient) ReportIScsiSendTargetPortals(ctx context.Context, in *ReportIScsiSendTargetPortalsRequest, opts ...grpc.CallOption) (*ReportIScsiSendTargetPortalsResponse, error) {
	out := new(ReportIScsiSendTargetPortalsResponse)
	err := c.cc.Invoke(ctx, "/api.IscsiCSIProxyService/ReportIScsiSendTargetPortals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iscsiCSIProxyServiceClient) AddIScsiSendTargetPortal(ctx context.Context, in *AddIScsiSendTargetPortalRequest, opts ...grpc.CallOption) (*AddIScsiSendTargetPortalResponse, error) {
	out := new(AddIScsiSendTargetPortalResponse)
	err := c.cc.Invoke(ctx, "/api.IscsiCSIProxyService/AddIScsiSendTargetPortal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iscsiCSIProxyServiceClient) RemoveIScsiSendTargetPortal(ctx context.Context, in *RemoveIScsiSendTargetPortalRequest, opts ...grpc.CallOption) (*RemoveIScsiSendTargetPortalResponse, error) {
	out := new(RemoveIScsiSendTargetPortalResponse)
	err := c.cc.Invoke(ctx, "/api.IscsiCSIProxyService/RemoveIScsiSendTargetPortal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iscsiCSIProxyServiceClient) ReportIScsiTargets(ctx context.Context, in *ReportIScsiTargetsRequest, opts ...grpc.CallOption) (*ReportIScsiTargetsResponse, error) {
	out := new(ReportIScsiTargetsResponse)
	err := c.cc.Invoke(ctx, "/api.IscsiCSIProxyService/ReportIScsiTargets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iscsiCSIProxyServiceClient) LoginIscsiTarget(ctx context.Context, in *LoginIscsiTargetRequest, opts ...grpc.CallOption) (*LoginIscsiTargetResponse, error) {
	out := new(LoginIscsiTargetResponse)
	err := c.cc.Invoke(ctx, "/api.IscsiCSIProxyService/LoginIscsiTarget", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iscsiCSIProxyServiceClient) LogoutIScsiTarget(ctx context.Context, in *LogoutIScsiTargetRequest, opts ...grpc.CallOption) (*LogoutIScsiTargetResponse, error) {
	out := new(LogoutIScsiTargetResponse)
	err := c.cc.Invoke(ctx, "/api.IscsiCSIProxyService/LogoutIScsiTarget", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iscsiCSIProxyServiceClient) GetIScsiSessionList(ctx context.Context, in *GetIScsiSessionListRequest, opts ...grpc.CallOption) (*GetIScsiSessionListResponse, error) {
	out := new(GetIScsiSessionListResponse)
	err := c.cc.Invoke(ctx, "/api.IscsiCSIProxyService/GetIScsiSessionList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iscsiCSIProxyServiceClient) GetDevicesForIScsiSession(ctx context.Context, in *GetDevicesForIScsiSessionRequest, opts ...grpc.CallOption) (*GetDevicesForIScsiSessionResponse, error) {
	out := new(GetDevicesForIScsiSessionResponse)
	err := c.cc.Invoke(ctx, "/api.IscsiCSIProxyService/GetDevicesForIScsiSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IscsiCSIProxyServiceServer is the server API for IscsiCSIProxyService service.
type IscsiCSIProxyServiceServer interface {
	// MountISCSILun mounts a remote LUN over iSCSI and returns the OS disk device number.
	MountISCSILun(context.Context, *MountISCSILunRequest) (*MountISCSILunResponse, error)
	// ReportIScsiSendTargetPortals retrieves a list of static target portals that the iSCSI initiator
	// service uses to perform automatic discovery with SendTarget requests.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-reportiscsisendtargetportalsexw
	ReportIScsiSendTargetPortals(context.Context, *ReportIScsiSendTargetPortalsRequest) (*ReportIScsiSendTargetPortalsResponse, error)
	// AddIScsiSendTargetPortal adds a static target portal to the list of target portals to which the iSCSI initiator service transmits SendTargets requests.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-addiscsisendtargetportalw
	AddIScsiSendTargetPortal(context.Context, *AddIScsiSendTargetPortalRequest) (*AddIScsiSendTargetPortalResponse, error)
	// RemoveIScsiSendTargetPortal removes a portal from the list of portals to which the iSCSI initiator service sends
	// SendTargets requests for target discovery.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-removeiscsisendtargetportalw
	RemoveIScsiSendTargetPortal(context.Context, *RemoveIScsiSendTargetPortalRequest) (*RemoveIScsiSendTargetPortalResponse, error)
	// ReportIScsiTargets retrieves the list of targets that the iSCSI initiator service has discovered.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-reportiscsitargetsw
	ReportIScsiTargets(context.Context, *ReportIScsiTargetsRequest) (*ReportIScsiTargetsResponse, error)
	// LoginIscsiTarget establishes a full featured login session with the indicated target.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-loginiscsitargetw
	LoginIscsiTarget(context.Context, *LoginIscsiTargetRequest) (*LoginIscsiTargetResponse, error)
	// LogoutIScsiTarget closes the specified login session.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-logoutiscsitarget
	LogoutIScsiTarget(context.Context, *LogoutIScsiTargetRequest) (*LogoutIScsiTargetResponse, error)
	// GetIScsiSessionList retrieves the list of active iSCSI sessions.
	// see https://docs.microsoft.com/en-us/windows/desktop/api/iscsidsc/nf-iscsidsc-getiscsisessionlistw
	GetIScsiSessionList(context.Context, *GetIScsiSessionListRequest) (*GetIScsiSessionListResponse, error)
	// GetDevicesForIScsiSession retrieves information about the devices associated with an existing session.
	// see https://docs.microsoft.com/en-us/windows/win32/api/iscsidsc/nf-iscsidsc-getdevicesforiscsisessionw
	GetDevicesForIScsiSession(context.Context, *GetDevicesForIScsiSessionRequest) (*GetDevicesForIScsiSessionResponse, error)
}

// UnimplementedIscsiCSIProxyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIscsiCSIProxyServiceServer struct {
}

func (*UnimplementedIscsiCSIProxyServiceServer) MountISCSILun(ctx context.Context, req *MountISCSILunRequest) (*MountISCSILunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MountISCSILun not implemented")
}
func (*UnimplementedIscsiCSIProxyServiceServer) ReportIScsiSendTargetPortals(ctx context.Context, req *ReportIScsiSendTargetPortalsRequest) (*ReportIScsiSendTargetPortalsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportIScsiSendTargetPortals not implemented")
}
func (*UnimplementedIscsiCSIProxyServiceServer) AddIScsiSendTargetPortal(ctx context.Context, req *AddIScsiSendTargetPortalRequest) (*AddIScsiSendTargetPortalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddIScsiSendTargetPortal not implemented")
}
func (*UnimplementedIscsiCSIProxyServiceServer) RemoveIScsiSendTargetPortal(ctx context.Context, req *RemoveIScsiSendTargetPortalRequest) (*RemoveIScsiSendTargetPortalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveIScsiSendTargetPortal not implemented")
}
func (*UnimplementedIscsiCSIProxyServiceServer) ReportIScsiTargets(ctx context.Context, req *ReportIScsiTargetsRequest) (*ReportIScsiTargetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportIScsiTargets not implemented")
}
func (*UnimplementedIscsiCSIProxyServiceServer) LoginIscsiTarget(ctx context.Context, req *LoginIscsiTargetRequest) (*LoginIscsiTargetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginIscsiTarget not implemented")
}
func (*UnimplementedIscsiCSIProxyServiceServer) LogoutIScsiTarget(ctx context.Context, req *LogoutIScsiTargetRequest) (*LogoutIScsiTargetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogoutIScsiTarget not implemented")
}
func (*UnimplementedIscsiCSIProxyServiceServer) GetIScsiSessionList(ctx context.Context, req *GetIScsiSessionListRequest) (*GetIScsiSessionListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIScsiSessionList not implemented")
}
func (*UnimplementedIscsiCSIProxyServiceServer) GetDevicesForIScsiSession(ctx context.Context, req *GetDevicesForIScsiSessionRequest) (*GetDevicesForIScsiSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDevicesForIScsiSession not implemented")
}

func RegisterIscsiCSIProxyServiceServer(s *grpc.Server, srv IscsiCSIProxyServiceServer) {
	s.RegisterService(&_IscsiCSIProxyService_serviceDesc, srv)
}

func _IscsiCSIProxyService_MountISCSILun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MountISCSILunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IscsiCSIProxyServiceServer).MountISCSILun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.IscsiCSIProxyService/MountISCSILun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IscsiCSIProxyServiceServer).MountISCSILun(ctx, req.(*MountISCSILunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IscsiCSIProxyService_ReportIScsiSendTargetPortals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportIScsiSendTargetPortalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IscsiCSIProxyServiceServer).ReportIScsiSendTargetPortals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.IscsiCSIProxyService/ReportIScsiSendTargetPortals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IscsiCSIProxyServiceServer).ReportIScsiSendTargetPortals(ctx, req.(*ReportIScsiSendTargetPortalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IscsiCSIProxyService_AddIScsiSendTargetPortal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddIScsiSendTargetPortalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IscsiCSIProxyServiceServer).AddIScsiSendTargetPortal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.IscsiCSIProxyService/AddIScsiSendTargetPortal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IscsiCSIProxyServiceServer).AddIScsiSendTargetPortal(ctx, req.(*AddIScsiSendTargetPortalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IscsiCSIProxyService_RemoveIScsiSendTargetPortal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveIScsiSendTargetPortalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IscsiCSIProxyServiceServer).RemoveIScsiSendTargetPortal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.IscsiCSIProxyService/RemoveIScsiSendTargetPortal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IscsiCSIProxyServiceServer).RemoveIScsiSendTargetPortal(ctx, req.(*RemoveIScsiSendTargetPortalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IscsiCSIProxyService_ReportIScsiTargets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportIScsiTargetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IscsiCSIProxyServiceServer).ReportIScsiTargets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.IscsiCSIProxyService/ReportIScsiTargets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IscsiCSIProxyServiceServer).ReportIScsiTargets(ctx, req.(*ReportIScsiTargetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IscsiCSIProxyService_LoginIscsiTarget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginIscsiTargetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IscsiCSIProxyServiceServer).LoginIscsiTarget(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.IscsiCSIProxyService/LoginIscsiTarget",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IscsiCSIProxyServiceServer).LoginIscsiTarget(ctx, req.(*LoginIscsiTargetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IscsiCSIProxyService_LogoutIScsiTarget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutIScsiTargetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IscsiCSIProxyServiceServer).LogoutIScsiTarget(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.IscsiCSIProxyService/LogoutIScsiTarget",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IscsiCSIProxyServiceServer).LogoutIScsiTarget(ctx, req.(*LogoutIScsiTargetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IscsiCSIProxyService_GetIScsiSessionList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIScsiSessionListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IscsiCSIProxyServiceServer).GetIScsiSessionList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.IscsiCSIProxyService/GetIScsiSessionList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IscsiCSIProxyServiceServer).GetIScsiSessionList(ctx, req.(*GetIScsiSessionListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IscsiCSIProxyService_GetDevicesForIScsiSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDevicesForIScsiSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IscsiCSIProxyServiceServer).GetDevicesForIScsiSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.IscsiCSIProxyService/GetDevicesForIScsiSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IscsiCSIProxyServiceServer).GetDevicesForIScsiSession(ctx, req.(*GetDevicesForIScsiSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IscsiCSIProxyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.IscsiCSIProxyService",
	HandlerType: (*IscsiCSIProxyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MountISCSILun",
			Handler:    _IscsiCSIProxyService_MountISCSILun_Handler,
		},
		{
			MethodName: "ReportIScsiSendTargetPortals",
			Handler:    _IscsiCSIProxyService_ReportIScsiSendTargetPortals_Handler,
		},
		{
			MethodName: "AddIScsiSendTargetPortal",
			Handler:    _IscsiCSIProxyService_AddIScsiSendTargetPortal_Handler,
		},
		{
			MethodName: "RemoveIScsiSendTargetPortal",
			Handler:    _IscsiCSIProxyService_RemoveIScsiSendTargetPortal_Handler,
		},
		{
			MethodName: "ReportIScsiTargets",
			Handler:    _IscsiCSIProxyService_ReportIScsiTargets_Handler,
		},
		{
			MethodName: "LoginIscsiTarget",
			Handler:    _IscsiCSIProxyService_LoginIscsiTarget_Handler,
		},
		{
			MethodName: "LogoutIScsiTarget",
			Handler:    _IscsiCSIProxyService_LogoutIScsiTarget_Handler,
		},
		{
			MethodName: "GetIScsiSessionList",
			Handler:    _IscsiCSIProxyService_GetIScsiSessionList_Handler,
		},
		{
			MethodName: "GetDevicesForIScsiSession",
			Handler:    _IscsiCSIProxyService_GetDevicesForIScsiSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iscsi.proto",
}
